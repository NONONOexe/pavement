[{"path":[]},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement ando@maslab.aitech.ac.jp. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://nononoexe.github.io/pavement/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 pavement authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nononoexe.github.io/pavement/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Keisuke ANDO. Author, maintainer. Takeshi UCHITANE. Thesis advisor. Naoto MUKAI. Thesis advisor. Kazunori IWATA. Thesis advisor. Nobuhiro ITO. Thesis advisor. Yong JIANG. Thesis advisor.","code":""},{"path":"https://nononoexe.github.io/pavement/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"ANDO K (2025). pavement: Analyzing Spatial Events Roadways. R package version 0.0.1, https://nononoexe.github.io/pavement/, https://github.com/NONONOexe/pavement.","code":"@Manual{,   title = {pavement: Analyzing Spatial Events on Roadways},   author = {Keisuke ANDO},   year = {2025},   note = {R package version 0.0.1, https://nononoexe.github.io/pavement/},   url = {https://github.com/NONONOexe/pavement}, }"},{"path":[]},{"path":"https://nononoexe.github.io/pavement/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Analyzing Spatial Events on Roadways","text":"pavement package designed analyze spatial events occurring roadways. provides comprehensive toolkit working spatial data, empowering users understand patterns trends road-related phenomena.","code":""},{"path":"https://nononoexe.github.io/pavement/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyzing Spatial Events on Roadways","text":"can install development version pavement using following methods:","code":""},{"path":"https://nononoexe.github.io/pavement/index.html","id":"using-installpackages-r-universe","dir":"","previous_headings":"Installation","what":"Using install.packages() (R-universe)","title":"Analyzing Spatial Events on Roadways","text":"","code":"# Enable the R-universe options(repos = c(   nononoexe = \"https://nononoexe.r-universe.dev\",   cran = \"https://cloud.r-project.org\" ))  # Install the package install.packages(\"pavement\")"},{"path":"https://nononoexe.github.io/pavement/index.html","id":"using-pak","dir":"","previous_headings":"Installation","what":"Using pak","title":"Analyzing Spatial Events on Roadways","text":"","code":"# install.packages(\"pak) pak::pak(\"nononoexe/pavement\")"},{"path":"https://nononoexe.github.io/pavement/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Analyzing Spatial Events on Roadways","text":"example demonstrates visualize distribution roads traffic accidents using pavement:","code":"library(pavement)  segmented_network <- sample_roads |>   create_road_network() |>   set_events(sample_accidents) |>   create_segmented_network(segment_length = 0.5) |>   convolute_segmented_network() #> Warning in transform_coordinates(spatial_object, target = \"cartesian\", quiet = #> quiet): CRS is missing. Returning the input object without transformation. plot(segmented_network, mode = \"event\") plot(segmented_network, mode = \"count\") plot(segmented_network, mode = \"density\")"},{"path":"https://nononoexe.github.io/pavement/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Analyzing Spatial Events on Roadways","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/compute_epanechnikov.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Epanechnikov function — compute_epanechnikov","title":"Compute the Epanechnikov function — compute_epanechnikov","text":"Epanechnikov function one quadratic kernels used kernel density estimation. defined follows: $$K(x) = \\frac{3}{4}(1 - x^2) \\quad \\text{} \\quad |x| \\leq 1\\text{.}$$","code":""},{"path":"https://nononoexe.github.io/pavement/reference/compute_epanechnikov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Epanechnikov function — compute_epanechnikov","text":"","code":"compute_epanechnikov(x)"},{"path":"https://nononoexe.github.io/pavement/reference/compute_epanechnikov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Epanechnikov function — compute_epanechnikov","text":"x numeric vector.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/compute_epanechnikov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Epanechnikov function — compute_epanechnikov","text":"numeric vector weights kernel input points.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/compute_epanechnikov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Epanechnikov function — compute_epanechnikov","text":"","code":"x <- seq(-3, 3, 0.1) y <- compute_epanechnikov(x) plot(x, y, xlim = c(-3, 3), ylim = c(0, 1), type = \"l\")"},{"path":"https://nononoexe.github.io/pavement/reference/compute_gaussian.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Gaussian function — compute_gaussian","title":"Compute the Gaussian function — compute_gaussian","text":"Gaussian function bell-shaped function defined follows: $$   K(x) =     \\frac{1}{\\sqrt{2\\pi\\sigma^2}}     \\exp\\left( -\\frac{x^2}{2\\sigma^2} \\right)\\text{.} $$","code":""},{"path":"https://nononoexe.github.io/pavement/reference/compute_gaussian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Gaussian function — compute_gaussian","text":"","code":"compute_gaussian(x, sigma = 1)"},{"path":"https://nononoexe.github.io/pavement/reference/compute_gaussian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Gaussian function — compute_gaussian","text":"x numric vector. sigma standard deviation Gaussian function.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/compute_gaussian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Gaussian function — compute_gaussian","text":"numeric vector weights kernel input points.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/compute_gaussian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Gaussian function — compute_gaussian","text":"","code":"x <- seq(-3, 3, 0.1) y <- compute_gaussian(x, sigma = 1) plot(x, y, xlim = c(-3, 3), ylim = c(0, 1), type = \"l\")"},{"path":"https://nononoexe.github.io/pavement/reference/convert_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a bounding box to coordinates or a polygon — convert_bbox","title":"Convert a bounding box to coordinates or a polygon — convert_bbox","text":"function converts bounding box either coordinates polygon.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/convert_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a bounding box to coordinates or a polygon — convert_bbox","text":"","code":"convert_bbox(bbox, output = c(\"coordinates\", \"polygon\"), crs = NULL)  convert_bbox_to_coordinates(bbox)  convert_bbox_to_polygon(bbox, crs = NULL)"},{"path":"https://nononoexe.github.io/pavement/reference/convert_bbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a bounding box to coordinates or a polygon — convert_bbox","text":"bbox numeric matrix two columns two rows. bbox represents minimum maximum coordinates. bounding box can created using create_bbox function. output string specifying output type. Either \"coordinates\" \"polygon\". crs string specifying coordinate reference system. used converting polygon.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/convert_bbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a bounding box to coordinates or a polygon — convert_bbox","text":"coordinates object sfc polygon object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/convert_bbox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a bounding box to coordinates or a polygon — convert_bbox","text":"","code":"bbox <- create_bbox(center_lon = 136.9024,                     center_lat =  35.1649,                     width      = 0.10,                     height     = 0.05) convert_bbox_to_coordinates(bbox) #> {(136.8524, 35.1399), (136.9524, 35.1399), (136.9524, 35.1899), (136.8524, 35.1899)} convert_bbox_to_polygon(bbox, crs = 4326) #> Geometry set for 1 feature  #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 136.8524 ymin: 35.1399 xmax: 136.9524 ymax: 35.1899 #> Geodetic CRS:  WGS 84 #> POLYGON ((136.8524 35.1399, 136.9524 35.1399, 1..."},{"path":"https://nononoexe.github.io/pavement/reference/convolute_segmented_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Convolute segmented road network — convolute_segmented_network","title":"Convolute segmented road network — convolute_segmented_network","text":"function convolves segmented network using specified kernel function, typically traffic modeling network analysis. computes weights densities based distance links network number events assigned link. Optionally, can adjust branching network.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/convolute_segmented_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convolute segmented road network — convolute_segmented_network","text":"","code":"convolute_segmented_network(   segmented_network,   kernel = compute_epanechnikov,   bandwidth = 3,   use_esd = TRUE,   correct_boundary_effects = TRUE,   ... )"},{"path":"https://nononoexe.github.io/pavement/reference/convolute_segmented_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convolute segmented road network — convolute_segmented_network","text":"segmented_network segmented_network object assigned events. kernel kernel function use convolution (default Epanechnikov kernel). bandwidth Numeric value representing bandwidth kernel function (default 3). use_esd TRUE, considers branching kernel using Equal Split Discontinous kernel (ESD). ESD follows method described Okabe et al., accounting road intersections ensuring kernel weights correctly distributed across accross branches (default TRUE). correct_boundary_effects TRUE, corrects boundary effects normalizing kernel weights account kernel values outside network (default TRUE). ... Additional arguments passed kernel function.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/convolute_segmented_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convolute segmented road network — convolute_segmented_network","text":"segmented network updated link densities.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/convolute_segmented_network.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convolute segmented road network — convolute_segmented_network","text":"Okabe, ., Satoh, T., & Sugihara, K. (2009). kernel density estimation method networks, computational method GIS-based tool. International Journal Geographical Information Science, 23(1), 7-32. doi:10.1080/13658810802475491","code":""},{"path":"https://nononoexe.github.io/pavement/reference/convolute_segmented_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convolute segmented road network — convolute_segmented_network","text":"","code":"# Create a road network road_network <- create_road_network(sample_roads)  # Assign sample accidents data road_network <- set_events(road_network, sample_accidents)  # Segment the road network segmented_network <- create_segmented_network(   road_network,   segment_length = 0.5 )  # Check the segmented road network after assigning events segmented_network #> Segmented network #> Segment length:  0.5 #> Segments: #>            id        from          to parent_link parent_road count density #> 1 sl_00000001 sn_00000001 sn_00000003   lk_000001     rd_0001     0       0 #> 2 sl_00000002 sn_00000003 sn_00000004   lk_000001     rd_0001     0       0 #> 3 sl_00000003 sn_00000004 sn_00000005   lk_000001     rd_0001     0       0 #> 4 sl_00000004 sn_00000005 sn_00000006   lk_000001     rd_0001     0       0 #> 5 sl_00000005 sn_00000006 sn_00000007   lk_000001     rd_0001     0       0 #>                         geometry #> 1  LINESTRING (0 0, 0.5135231 0) #> 2 LINESTRING (0.5135231 0, 1.... #> 3 LINESTRING (1.027046 0, 1.5... #> 4 LINESTRING (1.540569 0, 2.0... #> 5 LINESTRING (2.054093 0, 2.5... #> ... 52 more segments #> Events: #>        id time weather severity        geometry #> 1 ac_0001   18   Sunny    Minor     POINT (1 1) #> 2 ac_0002    4   Foggy    Fatal POINT (3.2 0.4) #> 3 ac_0003   13   Snowy    Minor POINT (4.1 3.1) #> 4 ac_0004   23   Sunny    Minor POINT (5.7 3.1) #> 5 ac_0005    7   Rainy    Minor POINT (5.9 1.1) #> ... 52 more events  # Apply the convilution to calculate link densities using # the kernel function convoluted_network <- convolute_segmented_network(segmented_network)  # Check the convoluted network with the computed densities convoluted_network #> Segmented network #> Segment length:  0.5 #> Segments: #>            id        from          to parent_link parent_road count     density #> 1 sl_00000001 sn_00000001 sn_00000003   lk_000001     rd_0001     0 0.000000000 #> 2 sl_00000002 sn_00000003 sn_00000004   lk_000001     rd_0001     0 0.003439447 #> 3 sl_00000003 sn_00000004 sn_00000005   lk_000001     rd_0001     0 0.006830324 #> 4 sl_00000004 sn_00000005 sn_00000006   lk_000001     rd_0001     0 0.009467673 #> 5 sl_00000005 sn_00000006 sn_00000007   lk_000001     rd_0001     0 0.011351494 #>                         geometry #> 1  LINESTRING (0 0, 0.5135231 0) #> 2 LINESTRING (0.5135231 0, 1.... #> 3 LINESTRING (1.027046 0, 1.5... #> 4 LINESTRING (1.540569 0, 2.0... #> 5 LINESTRING (2.054093 0, 2.5... #> ... 52 more segments #> Events: #>        id time weather severity        geometry #> 1 ac_0001   18   Sunny    Minor     POINT (1 1) #> 2 ac_0002    4   Foggy    Fatal POINT (3.2 0.4) #> 3 ac_0003   13   Snowy    Minor POINT (4.1 3.1) #> 4 ac_0004   23   Sunny    Minor POINT (5.7 3.1) #> 5 ac_0005    7   Rainy    Minor POINT (5.9 1.1) #> ... 52 more events  # Plot the convoluted network showing the density distribution plot(convoluted_network, mode = \"density\")"},{"path":"https://nononoexe.github.io/pavement/reference/create_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a bounding box — create_bbox","title":"Create a bounding box — create_bbox","text":"function creates bounding box either cardinal coordinates (north, south, east west) center coordinates dimensions (center longitude latitude, size width height).","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a bounding box — create_bbox","text":"","code":"create_bbox(   north = NULL,   south = NULL,   east = NULL,   west = NULL,   center_lon = NULL,   center_lat = NULL,   width = NULL,   height = NULL )"},{"path":"https://nononoexe.github.io/pavement/reference/create_bbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a bounding box — create_bbox","text":"north northernmost latitude. south southernmost latitude. east easternmost longitude. west westernmost longitude. center_lon center longitude. center_lat center latitude. width width bounding box. height height bounding box.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_bbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a bounding box — create_bbox","text":"2x2 matrix representing bounding box.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_bbox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a bounding box — create_bbox","text":"","code":"# Create a bounding box from cardinal coordinates create_bbox(   north =  35.1899,   south =  35.1399,   east  = 136.9524,   west  = 136.8524 ) #>        min      max #> x 136.8524 136.9524 #> y  35.1399  35.1899  # Create a bounding box from center coordinates and dimensions create_bbox(   center_lon = 136.9024,   center_lat =  35.1649,   width      = 0.10,   height     = 0.05 ) #>        min      max #> x 136.8524 136.9524 #> y  35.1399  35.1899"},{"path":"https://nononoexe.github.io/pavement/reference/create_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a collection of coordinates. — create_coordinates","title":"Create a collection of coordinates. — create_coordinates","text":"function creates collection coordinates sequence x y coordinates.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a collection of coordinates. — create_coordinates","text":"","code":"create_coordinates(...)"},{"path":"https://nononoexe.github.io/pavement/reference/create_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a collection of coordinates. — create_coordinates","text":"... sequence x y coordinates.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a collection of coordinates. — create_coordinates","text":"coordinates object matrix x y columns.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a collection of coordinates. — create_coordinates","text":"","code":"# Create a `coordinates` object from a sequence of x and y coordinates create_coordinates(1, 2, 3, 4) #> {(1, 2), (3, 4)}  # Create a `coordinates` object from an with a vector of x and y # coordinates create_coordinates(c(1, 2, 3, 4)) #> {(1, 2), (3, 4)}"},{"path":"https://nononoexe.github.io/pavement/reference/create_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a graph from nodes and links — create_graph","title":"Create a graph from nodes and links — create_graph","text":"function creates graph object set nodes links.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a graph from nodes and links — create_graph","text":"","code":"create_graph(nodes, links, directed = FALSE)"},{"path":"https://nononoexe.github.io/pavement/reference/create_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a graph from nodes and links — create_graph","text":"nodes sf object representing nodes. links sf object representing links nodes. directed logical indicating whether graph directed.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a graph from nodes and links — create_graph","text":"igraph object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a graph from nodes and links — create_graph","text":"","code":"# Create nodes and links nodes <- extract_road_network_nodes(sample_roads) links <- extract_road_network_links(sample_roads, nodes)  # Create the graph graph <- create_graph(nodes, links) graph #> IGRAPH 84daa9b UNW- 10 10 --  #> + attr: name (v/c), x (v/n), y (v/n), name (e/c), x (e/n), y (e/n), #> | weight (e/n) #> + edges from 84daa9b (vertex names): #>  [1] jn_000001--jn_000002 jn_000003--jn_000005 jn_000003--jn_000004 #>  [4] jn_000006--jn_000006 jn_000002--jn_000006 jn_000007--jn_000008 #>  [7] jn_000002--jn_000007 jn_000007--jn_00000a jn_000003--jn_000009 #> [10] jn_000003--jn_000007  # Plot the graph plot(graph)"},{"path":"https://nononoexe.github.io/pavement/reference/create_line_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a line graph from a network — create_line_graph","title":"Create a line graph from a network — create_line_graph","text":"function creates line graph nodes represent midpoints links input network.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_line_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a line graph from a network — create_line_graph","text":"","code":"create_line_graph(network)"},{"path":"https://nononoexe.github.io/pavement/reference/create_line_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a line graph from a network — create_line_graph","text":"network road_network segmented_network object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_line_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a line graph from a network — create_line_graph","text":"igraph object representing midpoint graph.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_line_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a line graph from a network — create_line_graph","text":"","code":"# Create a road network network <- create_road_network(sample_roads)  # Plot the road network plot(network$graph)   # Create a midpoint graph from a road network graph <- create_line_graph(network)  # Plot the midpoint graph plot(graph)"},{"path":"https://nononoexe.github.io/pavement/reference/create_linestring.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a linestring geometry — create_linestring","title":"Create a linestring geometry — create_linestring","text":"function creates simple feature linestring object series x, y coordinates.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_linestring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a linestring geometry — create_linestring","text":"","code":"create_linestring(...)  # S3 method for class 'numeric' create_linestring(..., crs = NULL)  # S3 method for class 'coordinates' create_linestring(coordinates, crs = NULL, ...)"},{"path":"https://nononoexe.github.io/pavement/reference/create_linestring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a linestring geometry — create_linestring","text":"... series x, y coordinates. crs coordinate reference system. coordinates coordinates object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_linestring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a linestring geometry — create_linestring","text":"simple feature linestring object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_linestring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a linestring geometry — create_linestring","text":"","code":"# Create a linestring from individual coordinates linestring_1 <- create_linestring(0, 1, 1, 0, 2, 1) linestring_1 #> Geometry set for 1 feature  #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 0 xmax: 2 ymax: 1 #> CRS:           NA #> LINESTRING (0 1, 1 0, 2 1) plot(linestring_1)   # Create a linestring from a numeric vector linestring_2 <- create_linestring(   c(0, 1, 1, 1, 1, 0, 0, 0, 0, 0.5, 1, 0.5) ) linestring_2 #> Geometry set for 1 feature  #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 0 xmax: 1 ymax: 1 #> CRS:           NA #> LINESTRING (0 1, 1 1, 1 0, 0 0, 0 0.5, 1 0.5) plot(linestring_2)"},{"path":"https://nononoexe.github.io/pavement/reference/create_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Create points geometry — create_points","title":"Create points geometry — create_points","text":"function creates simple feature collection points series x, y coordinates.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create points geometry — create_points","text":"","code":"create_points(...)  # S3 method for class 'numeric' create_points(..., crs = NULL)  # S3 method for class 'coordinates' create_points(coordinates, crs = NULL, ...)"},{"path":"https://nononoexe.github.io/pavement/reference/create_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create points geometry — create_points","text":"... series x, y coordinates. crs coordinate reference system. coordinates coordinates object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create points geometry — create_points","text":"simple feature points object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create points geometry — create_points","text":"","code":"# Create a points from individual coordinates points_1 <- create_points(0, 1, 1, 0, 2, 1) points_1 #> Geometry set for 3 features  #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 0 xmax: 2 ymax: 1 #> CRS:           NA #> POINT (0 1) #> POINT (1 0) #> POINT (2 1) plot(points_1)   # Create a linestring from a numeric vector points_2 <- create_points(   c(0, 1, 1, 1, 1, 0, 0, 0, 0, 0.5, 1, 0.5) ) points_2 #> Geometry set for 6 features  #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 0 xmax: 1 ymax: 1 #> CRS:           NA #> First 5 geometries: #> POINT (0 1) #> POINT (1 1) #> POINT (1 0) #> POINT (0 0) #> POINT (0 0.5) plot(points_2)"},{"path":"https://nononoexe.github.io/pavement/reference/create_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a polygon geometry — create_polygon","title":"Create a polygon geometry — create_polygon","text":"function creates polygon bounding box series x, y coordinates.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a polygon geometry — create_polygon","text":"","code":"create_polygon(...)  # S3 method for class 'numeric' create_polygon(..., crs = NULL)  # S3 method for class 'coordinates' create_polygon(coordinates, crs = NULL, ...)"},{"path":"https://nononoexe.github.io/pavement/reference/create_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a polygon geometry — create_polygon","text":"... series x, y coordinates. crs coordinate reference system. coordinates coordinates object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a polygon geometry — create_polygon","text":"polygon object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_polygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a polygon geometry — create_polygon","text":"","code":"polygon <- create_polygon(   136.9009, 35.16377,   136.9159, 35.16377,   136.9159, 35.17377,   136.9009, 35.17377,   crs = 4326 )"},{"path":"https://nononoexe.github.io/pavement/reference/decompose_linestring.html","id":null,"dir":"Reference","previous_headings":"","what":"Decompose a linestring into a list of line segments — decompose_linestring","title":"Decompose a linestring into a list of line segments — decompose_linestring","text":"function decomposes linestring list line segments, segment linestring connecting two consecutive points input linestring.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/decompose_linestring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decompose a linestring into a list of line segments — decompose_linestring","text":"","code":"decompose_linestring(linestring)"},{"path":"https://nononoexe.github.io/pavement/reference/decompose_linestring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decompose a linestring into a list of line segments — decompose_linestring","text":"linestring linestring object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/decompose_linestring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decompose a linestring into a list of line segments — decompose_linestring","text":"list linestring objects, representing segment input linestring.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/decompose_linestring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decompose a linestring into a list of line segments — decompose_linestring","text":"","code":"# Create a linestring object linestring <- create_linestring(0, -1, 0, 1, 2, 1, 2, 0, 0, 0) plot(linestring)   # Decompose the linestring into line segments segments <- decompose_linestring(linestring) plot(segments, col = c(\"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\"))"},{"path":"https://nononoexe.github.io/pavement/reference/durations.html","id":null,"dir":"Reference","previous_headings":"","what":"Create durations — durations","title":"Create durations — durations","text":"function creates data frame durations.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/durations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create durations — durations","text":"","code":"create_durations(duration_length, ...)"},{"path":"https://nononoexe.github.io/pavement/reference/durations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create durations — durations","text":"duration_length length duration. ... Additional arguments passed methods.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/durations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create durations — durations","text":"durations object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/durations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create durations — durations","text":"","code":"# Create durations of 1 hour create_durations(\"1 hour\") #>         id                                         duration #> 1  ti_0001 2025-02-08 00:00:00 UTC--2025-02-08 00:59:59 UTC #> 2  ti_0002 2025-02-08 01:00:00 UTC--2025-02-08 01:59:59 UTC #> 3  ti_0003 2025-02-08 02:00:00 UTC--2025-02-08 02:59:59 UTC #> 4  ti_0004 2025-02-08 03:00:00 UTC--2025-02-08 03:59:59 UTC #> 5  ti_0005 2025-02-08 04:00:00 UTC--2025-02-08 04:59:59 UTC #> 6  ti_0006 2025-02-08 05:00:00 UTC--2025-02-08 05:59:59 UTC #> 7  ti_0007 2025-02-08 06:00:00 UTC--2025-02-08 06:59:59 UTC #> 8  ti_0008 2025-02-08 07:00:00 UTC--2025-02-08 07:59:59 UTC #> 9  ti_0009 2025-02-08 08:00:00 UTC--2025-02-08 08:59:59 UTC #> 10 ti_000a 2025-02-08 09:00:00 UTC--2025-02-08 09:59:59 UTC #> 11 ti_000b 2025-02-08 10:00:00 UTC--2025-02-08 10:59:59 UTC #> 12 ti_000c 2025-02-08 11:00:00 UTC--2025-02-08 11:59:59 UTC #> 13 ti_000d 2025-02-08 12:00:00 UTC--2025-02-08 12:59:59 UTC #> 14 ti_000e 2025-02-08 13:00:00 UTC--2025-02-08 13:59:59 UTC #> 15 ti_000f 2025-02-08 14:00:00 UTC--2025-02-08 14:59:59 UTC #> 16 ti_0010 2025-02-08 15:00:00 UTC--2025-02-08 15:59:59 UTC #> 17 ti_0011 2025-02-08 16:00:00 UTC--2025-02-08 16:59:59 UTC #> 18 ti_0012 2025-02-08 17:00:00 UTC--2025-02-08 17:59:59 UTC #> 19 ti_0013 2025-02-08 18:00:00 UTC--2025-02-08 18:59:59 UTC #> 20 ti_0014 2025-02-08 19:00:00 UTC--2025-02-08 19:59:59 UTC #> 21 ti_0015 2025-02-08 20:00:00 UTC--2025-02-08 20:59:59 UTC #> 22 ti_0016 2025-02-08 21:00:00 UTC--2025-02-08 21:59:59 UTC #> 23 ti_0017 2025-02-08 22:00:00 UTC--2025-02-08 22:59:59 UTC #> 24 ti_0018 2025-02-08 23:00:00 UTC--2025-02-08 23:59:59 UTC  # Create durations of 30 minutes create_durations(\"30 minutes\") #>         id                                         duration #> 1  ti_0001 2025-02-08 00:00:00 UTC--2025-02-08 00:29:59 UTC #> 2  ti_0002 2025-02-08 00:30:00 UTC--2025-02-08 00:59:59 UTC #> 3  ti_0003 2025-02-08 01:00:00 UTC--2025-02-08 01:29:59 UTC #> 4  ti_0004 2025-02-08 01:30:00 UTC--2025-02-08 01:59:59 UTC #> 5  ti_0005 2025-02-08 02:00:00 UTC--2025-02-08 02:29:59 UTC #> 6  ti_0006 2025-02-08 02:30:00 UTC--2025-02-08 02:59:59 UTC #> 7  ti_0007 2025-02-08 03:00:00 UTC--2025-02-08 03:29:59 UTC #> 8  ti_0008 2025-02-08 03:30:00 UTC--2025-02-08 03:59:59 UTC #> 9  ti_0009 2025-02-08 04:00:00 UTC--2025-02-08 04:29:59 UTC #> 10 ti_000a 2025-02-08 04:30:00 UTC--2025-02-08 04:59:59 UTC #> 11 ti_000b 2025-02-08 05:00:00 UTC--2025-02-08 05:29:59 UTC #> 12 ti_000c 2025-02-08 05:30:00 UTC--2025-02-08 05:59:59 UTC #> 13 ti_000d 2025-02-08 06:00:00 UTC--2025-02-08 06:29:59 UTC #> 14 ti_000e 2025-02-08 06:30:00 UTC--2025-02-08 06:59:59 UTC #> 15 ti_000f 2025-02-08 07:00:00 UTC--2025-02-08 07:29:59 UTC #> 16 ti_0010 2025-02-08 07:30:00 UTC--2025-02-08 07:59:59 UTC #> 17 ti_0011 2025-02-08 08:00:00 UTC--2025-02-08 08:29:59 UTC #> 18 ti_0012 2025-02-08 08:30:00 UTC--2025-02-08 08:59:59 UTC #> 19 ti_0013 2025-02-08 09:00:00 UTC--2025-02-08 09:29:59 UTC #> 20 ti_0014 2025-02-08 09:30:00 UTC--2025-02-08 09:59:59 UTC #> 21 ti_0015 2025-02-08 10:00:00 UTC--2025-02-08 10:29:59 UTC #> 22 ti_0016 2025-02-08 10:30:00 UTC--2025-02-08 10:59:59 UTC #> 23 ti_0017 2025-02-08 11:00:00 UTC--2025-02-08 11:29:59 UTC #> 24 ti_0018 2025-02-08 11:30:00 UTC--2025-02-08 11:59:59 UTC #> 25 ti_0019 2025-02-08 12:00:00 UTC--2025-02-08 12:29:59 UTC #> 26 ti_001a 2025-02-08 12:30:00 UTC--2025-02-08 12:59:59 UTC #> 27 ti_001b 2025-02-08 13:00:00 UTC--2025-02-08 13:29:59 UTC #> 28 ti_001c 2025-02-08 13:30:00 UTC--2025-02-08 13:59:59 UTC #> 29 ti_001d 2025-02-08 14:00:00 UTC--2025-02-08 14:29:59 UTC #> 30 ti_001e 2025-02-08 14:30:00 UTC--2025-02-08 14:59:59 UTC #> 31 ti_001f 2025-02-08 15:00:00 UTC--2025-02-08 15:29:59 UTC #> 32 ti_0020 2025-02-08 15:30:00 UTC--2025-02-08 15:59:59 UTC #> 33 ti_0021 2025-02-08 16:00:00 UTC--2025-02-08 16:29:59 UTC #> 34 ti_0022 2025-02-08 16:30:00 UTC--2025-02-08 16:59:59 UTC #> 35 ti_0023 2025-02-08 17:00:00 UTC--2025-02-08 17:29:59 UTC #> 36 ti_0024 2025-02-08 17:30:00 UTC--2025-02-08 17:59:59 UTC #> 37 ti_0025 2025-02-08 18:00:00 UTC--2025-02-08 18:29:59 UTC #> 38 ti_0026 2025-02-08 18:30:00 UTC--2025-02-08 18:59:59 UTC #> 39 ti_0027 2025-02-08 19:00:00 UTC--2025-02-08 19:29:59 UTC #> 40 ti_0028 2025-02-08 19:30:00 UTC--2025-02-08 19:59:59 UTC #> 41 ti_0029 2025-02-08 20:00:00 UTC--2025-02-08 20:29:59 UTC #> 42 ti_002a 2025-02-08 20:30:00 UTC--2025-02-08 20:59:59 UTC #> 43 ti_002b 2025-02-08 21:00:00 UTC--2025-02-08 21:29:59 UTC #> 44 ti_002c 2025-02-08 21:30:00 UTC--2025-02-08 21:59:59 UTC #> 45 ti_002d 2025-02-08 22:00:00 UTC--2025-02-08 22:29:59 UTC #> 46 ti_002e 2025-02-08 22:30:00 UTC--2025-02-08 22:59:59 UTC #> 47 ti_002f 2025-02-08 23:00:00 UTC--2025-02-08 23:29:59 UTC #> 48 ti_0030 2025-02-08 23:30:00 UTC--2025-02-08 23:59:59 UTC"},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_endpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract road endpoints — extract_road_endpoints","title":"Extract road endpoints — extract_road_endpoints","text":"function extracts endpoints set roads. identifies counts roads intersect endpoint.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_endpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract road endpoints — extract_road_endpoints","text":"","code":"extract_road_endpoints(roads)"},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_endpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract road endpoints — extract_road_endpoints","text":"roads linestring object representing roads. column named road_id.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_endpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract road endpoints — extract_road_endpoints","text":"points object representing road endpoints. endpoint following columns: parent_road: list road IDs intersect endpoint. num_overlaps: number roads intersect endpoint.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_intersections.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract road intersections — extract_road_intersections","title":"Extract road intersections — extract_road_intersections","text":"function identifies extracts intersections roads. considers intersections multiple roads layer.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_intersections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract road intersections — extract_road_intersections","text":"","code":"extract_road_intersections(roads)"},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_intersections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract road intersections — extract_road_intersections","text":"roads linestring object representing roads. column named layer column named road_id.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_intersections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract road intersections — extract_road_intersections","text":"data frame following columns: parent_road: list road IDs intersect intersection. num_overlaps: number roads intersect intersection.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_intersections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract road intersections — extract_road_intersections","text":"","code":"# Extract road intersections intersections <- extract_road_intersections(sample_roads) intersections #> Simple feature collection with 3 features and 2 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 2 ymin: 1 xmax: 6 ymax: 3 #> CRS:           NA #>    parent_road num_overlaps    geometry #> 1 rd_0003,....            2 POINT (2 3) #> 2 rd_0002,....            2 POINT (6 1) #> 3 rd_0005,....            2 POINT (6 3)  # Plot the intersections plot(sample_roads$geometry) plot(intersections$geometry, pch = 16, col = \"#E69F00\", add = TRUE)"},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_network_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract road network links — extract_road_network_links","title":"Extract road network links — extract_road_network_links","text":"function extracts road network links set road geometries. splits road geometries nodes creates new sf object representing road network links.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_network_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract road network links — extract_road_network_links","text":"","code":"extract_road_network_links(roads, nodes)"},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_network_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract road network links — extract_road_network_links","text":"roads linestring object representing roads. nodes point object representing road network nodes.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_network_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract road network links — extract_road_network_links","text":"linestring object representing road network links.","code":""},{"path":[]},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_network_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract road network nodes — extract_road_network_nodes","title":"Extract road network nodes — extract_road_network_nodes","text":"function extracts nodes roads represented linestring objects downloaded OpenStreetMap. Nodes defined intersections roads endpoints road segments.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_network_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract road network nodes — extract_road_network_nodes","text":"","code":"extract_road_network_nodes(roads)"},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_network_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract road network nodes — extract_road_network_nodes","text":"roads linestring object representing roads.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_network_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract road network nodes — extract_road_network_nodes","text":"points object representing road network nodes.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract segmented network links from a road network — extract_segmented_network_links","title":"Extract segmented network links from a road network — extract_segmented_network_links","text":"function extracts segmented network links road network based specified set segmented network nodes. splits linestrings road network links points segmented network nodes create segmented network links.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract segmented network links from a road network — extract_segmented_network_links","text":"","code":"extract_segmented_network_links(   road_network,   segmented_network_nodes,   tolerance = 1e-05 )"},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract segmented network links from a road network — extract_segmented_network_links","text":"road_network road_network object created create_road_network() segmented_network_nodes data frame representing segmented network nodes. tolerance numeric value representing maximum distance allowed linestring road link point segmented network node. distance exceeds value, point used split linestring.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract segmented network links from a road network — extract_segmented_network_links","text":"data frame representing segmented network links.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract segmented network links from a road network — extract_segmented_network_links","text":"","code":"# Create a road network road_network <- create_road_network(sample_roads)  # Extract segmented network nodes by length of 1 segmented_network_nodes <- extract_segmented_network_nodes(road_network, 1)  # Extract segmented network links segmented_network_links <- extract_segmented_network_links(   road_network,   segmented_network_nodes ) segmented_network_links #> Simple feature collection with 29 features and 7 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 0 xmax: 7 ymax: 5 #> CRS:           NA #> First 10 features: #>             id        from          to parent_link parent_road count density #> 1  sl_00000001 sn_00000001 sn_00000003   lk_000001     rd_0001     0       0 #> 2  sl_00000002 sn_00000003 sn_00000004   lk_000001     rd_0001     0       0 #> 3  sl_00000003 sn_00000004 sn_00000005   lk_000001     rd_0001     0       0 #> 4  sl_00000004 sn_00000005 sn_00000006   lk_000001     rd_0001     0       0 #> 5  sl_00000005 sn_00000006 sn_00000007   lk_000001     rd_0001     0       0 #> 6  sl_00000006 sn_00000007 sn_00000002   lk_000001     rd_0001     0       0 #> 7  sl_00000007 sn_00000008 sn_00000009   lk_000002     rd_0002     0       0 #> 8  sl_00000008 sn_0000000a sn_0000000b   lk_000003     rd_0002     0       0 #> 9  sl_00000009 sn_0000000b sn_0000000c   lk_000003     rd_0002     0       0 #> 10 sl_0000000a sn_0000000c sn_0000000d   lk_000003     rd_0002     0       0 #>                          geometry #> 1    LINESTRING (0 0, 1.027046 0) #> 2  LINESTRING (1.027046 0, 2.0... #> 3  LINESTRING (2.054093 0, 3 0... #> 4  LINESTRING (3.025658 0.0769... #> 5  LINESTRING (3.350439 1.0513... #> 6  LINESTRING (3.675219 2.0256... #> 7           LINESTRING (6 1, 7 1) #> 8           LINESTRING (0 1, 1 1) #> 9           LINESTRING (1 1, 2 1) #> 10          LINESTRING (2 1, 3 1)  # Plot the segmented network nodes and links plot(segmented_network_links$geometry, col = \"#E69F00\") plot(segmented_network_nodes$geometry, pch = 16, add = TRUE)"},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract nodes of segmented network from a road network — extract_segmented_network_nodes","title":"Extract nodes of segmented network from a road network — extract_segmented_network_nodes","text":"function extracts nodes regular intervals along link road network","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract nodes of segmented network from a road network — extract_segmented_network_nodes","text":"","code":"extract_segmented_network_nodes(road_network, segment_length)"},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract nodes of segmented network from a road network — extract_segmented_network_nodes","text":"road_network road_network object created create_network(). segment_length length segment sample along links.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract nodes of segmented network from a road network — extract_segmented_network_nodes","text":"sf object sampled points.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract nodes of segmented network from a road network — extract_segmented_network_nodes","text":"","code":"# Create a road network road_network <- create_road_network(sample_roads)  # Extract nodes with a segment length of 1 segmented_network_nodes <- extract_segmented_network_nodes(road_network, 1) segmented_network_nodes #> Simple feature collection with 29 features and 3 fields #> Attribute-geometry relationships: constant (2), NA's (1) #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 0 xmax: 7 ymax: 5 #> CRS:           NA #> First 10 features: #>             id  parent_link  parent_road                    geometry #> 1  sn_00000001    lk_000001      rd_0001                 POINT (0 0) #> 2  sn_00000002 lk_00000.... rd_0001,....                 POINT (4 3) #> 3  sn_00000003    lk_000001      rd_0001          POINT (1.027046 0) #> 4  sn_00000004    lk_000001      rd_0001          POINT (2.054093 0) #> 5  sn_00000005    lk_000001      rd_0001 POINT (3.025658 0.07697505) #> 6  sn_00000006    lk_000001      rd_0001   POINT (3.350439 1.051317) #> 7  sn_00000007    lk_000001      rd_0001   POINT (3.675219 2.025658) #> 8  sn_00000008 lk_00000.... rd_0002,....                 POINT (6 1) #> 9  sn_00000009    lk_000002      rd_0002                 POINT (7 1) #> 10 sn_0000000a    lk_000003      rd_0002                 POINT (0 1)  # Plot the segmented network nodes plot(road_network) plot(segmented_network_nodes$geometry, add = TRUE, pch = 16, col = \"#E69F00\")"},{"path":"https://nononoexe.github.io/pavement/reference/fetch_roads.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch road data from OpenStreetMap — fetch_roads","title":"Fetch road data from OpenStreetMap — fetch_roads","text":"fetch_roads() fetches road data OpenStreetMap. retrieves roads within specified bounding box within area defined center point radius. Additionally, roads can cropped fit within specified boundaries.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/fetch_roads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch road data from OpenStreetMap — fetch_roads","text":"","code":"fetch_roads(x, ...)  # S3 method for class 'matrix' fetch_roads(x, crop = FALSE, ...)  # S3 method for class 'sfc_POINT' fetch_roads(x, radius = 15, crop = FALSE, circle_crop = FALSE, ...)  # S3 method for class 'numeric' fetch_roads(x, y, radius = 15, crop = FALSE, circle_crop = FALSE, ...)  # S3 method for class 'character' fetch_roads(x, crop = FALSE, circle_crop = FALSE, ...)"},{"path":"https://nononoexe.github.io/pavement/reference/fetch_roads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch road data from OpenStreetMap — fetch_roads","text":"x object defining area location interest. can : matrix representing bounding box. sfc_POINT object representing central point. Numeric values representing longitude (x) latitude (y). character string containing pre-defined Overpass query. ... Additional arguments passed method. crop logical value indicating whether crop road data specified area (default: FALSE). radius Numeric value representing search radius meters (default: 15). circle_crop logical value indicating whether crop roads within circular area instead bounding box (default: FALSE). effective crop = TRUE. y Numeric value representing latitude (required x numeric represents longitude).","code":""},{"path":"https://nononoexe.github.io/pavement/reference/fetch_roads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch road data from OpenStreetMap — fetch_roads","text":"sf object class LINESTRING, containing road data followings columns: id Unique road identifier highway Road classification (e.g. \"residential\", \"primary\") name Road name layer Layer information roads different elevations oneway Logical indicating whether road one-way osm_id OpenStreetMap unique identifier","code":""},{"path":"https://nononoexe.github.io/pavement/reference/fetch_roads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch road data from OpenStreetMap — fetch_roads","text":"","code":"if (FALSE) { # \\dontrun{ # Download road data bbox <- create_bbox(   north =  35.17377,   south =  35.16377,   east  = 136.91590,   west  = 136.90090 ) roads <- fetch_roads(bbox)  # Plot the roads plot(roads$geometry) } # }"},{"path":"https://nononoexe.github.io/pavement/reference/filter_and_cast_geometries.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter and cast geometries — filter_and_cast_geometries","title":"Filter and cast geometries — filter_and_cast_geometries","text":"function filters given geometries specific type casts specified type.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/filter_and_cast_geometries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter and cast geometries — filter_and_cast_geometries","text":"","code":"filter_and_cast_geometries(   geometries,   geometry_type = c(\"POINT\", \"LINESTRING\", \"POLYGON\") )  get_points(geometries)  get_linestrings(geometries)  get_polygons(geometries)"},{"path":"https://nononoexe.github.io/pavement/reference/filter_and_cast_geometries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter and cast geometries — filter_and_cast_geometries","text":"geometries sf object representing geometries. geometry_type type geometry filter cast . Must one \"POINT\", \"LINESTRING\", \"POLYGON\".","code":""},{"path":"https://nononoexe.github.io/pavement/reference/filter_and_cast_geometries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter and cast geometries — filter_and_cast_geometries","text":"sf object containing specified type geometry.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/filter_and_cast_geometries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter and cast geometries — filter_and_cast_geometries","text":"","code":"plot(1, type = \"n\", xlab = \"\", ylab = \"\", axes = FALSE, xlim = c(0, 12), ylim = c(0, 10)) text(0, c(2, 6), c(\"Single\", \"Multiple\"), srt = 90, cex = 1) text(c(2, 6, 10), 8, c(\"Point\", \"Linestring\", \"Polygon\"), cex = 1)  geometries <- sf::st_sf(geometry = c(   # POINT   create_points(2, 2),   # LINESTRING   create_linestring(5, 1, 7, 3),   # POLYGON   create_polygon(9, 1, 9, 3, 11, 3, 11, 1),   # MULTIPOINT   sf::st_union(create_points(1, 7, 2, 6, 3, 5)),   # MULTILINESTRING   sf::st_union(     create_linestring(5, 6, 6, 7),     create_linestring(6, 5, 7, 6)   ),   # MULTIPOLYGON   sf::st_union(     create_polygon(9, 7, 10, 7, 10, 6, 9, 6),     create_polygon(10, 5, 11, 6, 11, 5)   ) )) plot(geometries, pch = 16, lwd = 2, add = TRUE)   # Get points from geometries plot(get_points(geometries), pch = 16)   # Get linestrings from geometries plot(get_linestrings(geometries), lwd = 2)   # Get polygons from geometries plot(get_polygons(geometries), lwd = 2)"},{"path":"https://nononoexe.github.io/pavement/reference/filter_points_within_tolerance.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter points within a tolerance distance — filter_points_within_tolerance","title":"Filter points within a tolerance distance — filter_points_within_tolerance","text":"function filters points within specified tolerance distance reference linestring.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/filter_points_within_tolerance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter points within a tolerance distance — filter_points_within_tolerance","text":"","code":"filter_points_within_tolerance(points, linestring, tolerance = 0.01)"},{"path":"https://nononoexe.github.io/pavement/reference/filter_points_within_tolerance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter points within a tolerance distance — filter_points_within_tolerance","text":"points sfc object containing points filter. linestring linestring object. tolerance numeric value representing maximum allowable distance points linestring. Points within distance linestring included filtered set.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/filter_points_within_tolerance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter points within a tolerance distance — filter_points_within_tolerance","text":"sfc object containing filtered points.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/filter_points_within_tolerance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter points within a tolerance distance — filter_points_within_tolerance","text":"","code":"# Create a points points <- create_points(   0.000, 1.000, 0.500, 0.600, 1.000, 0.010, 1.500, 0.501, 2.000, 0.990 )  # Create a linestring linestring <- create_linestring(0, 1, 1, 0, 2, 1)  # Plot the points plot(linestring, col = \"gray\") plot(points, add = TRUE)   # Filter points within a tolerance distance (default: 0.01) filtered_points <- filter_points_within_tolerance(points, linestring)  # Plot the filtered points plot(linestring, col = \"gray\") plot(filtered_points, add = TRUE)"},{"path":"https://nononoexe.github.io/pavement/reference/find_duration.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the index of the duration that contains the event time — find_duration","title":"Find the index of the duration that contains the event time — find_duration","text":"function find index duration contains event time.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/find_duration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the index of the duration that contains the event time — find_duration","text":"","code":"find_duration(events, durations, ...)"},{"path":"https://nononoexe.github.io/pavement/reference/find_duration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the index of the duration that contains the event time — find_duration","text":"events spatiotemporal event object. durations duration object. ... Additional arguments passed methods.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/find_duration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the index of the duration that contains the event time — find_duration","text":"vector indices corresponding durations contain event times.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/find_duration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the index of the duration that contains the event time — find_duration","text":"","code":"# Create a spatiotemporal event object accidents <- create_spatiotemporal_events(sample_accidents)  # Create a duration object durations <- create_durations(\"1 hour\")  # Find the duration that contains each accident find_duration(accidents, durations) #>  [1] 19  5 14 24  8  8 20  9 20 21"},{"path":"https://nononoexe.github.io/pavement/reference/generate_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate unique IDs based on parent IDs — generate_ids","title":"Generate unique IDs based on parent IDs — generate_ids","text":"function generates unique IDs based parent IDs. first extracts first ID parent ID, ranks IDs uses ranks format IDs.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/generate_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate unique IDs based on parent IDs — generate_ids","text":"","code":"generate_ids(parent_list, id_format)"},{"path":"https://nononoexe.github.io/pavement/reference/generate_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate unique IDs based on parent IDs — generate_ids","text":"parent_list list parent IDs. id_format format string IDs.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/generate_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate unique IDs based on parent IDs — generate_ids","text":"vector unique IDs.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/generate_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate unique IDs based on parent IDs — generate_ids","text":"","code":"parent_list <- c(\"rd_0001\", \"rd_0002\", \"rd_0003\") id_format <- \"jn_%06x\" generate_ids(parent_list, id_format) #> [1] \"jn_000001\" \"jn_000002\" \"jn_000003\""},{"path":"https://nononoexe.github.io/pavement/reference/get_connected_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Get connected links from a specified node — get_connected_links","title":"Get connected links from a specified node — get_connected_links","text":"function retrieves links connected specified node road network.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/get_connected_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get connected links from a specified node — get_connected_links","text":"","code":"get_connected_links(network, node_ids)"},{"path":"https://nononoexe.github.io/pavement/reference/get_connected_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get connected links from a specified node — get_connected_links","text":"network road_network segmented_network object. node_ids vector node IDs find connected links .","code":""},{"path":"https://nononoexe.github.io/pavement/reference/get_connected_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get connected links from a specified node — get_connected_links","text":"vector link IDs connected specified node.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/get_connected_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get connected links from a specified node — get_connected_links","text":"","code":"# Create a road network road_network <- create_road_network(sample_roads) target_node <- road_network$nodes[3,]$id target_node #> [1] \"jn_000003\"  # Get connected links connected_links <- get_connected_links(road_network, target_node) connected_links #> [1] \"lk_000002\" \"lk_000003\" \"lk_000009\" \"lk_00000a\"  # Plot the target node and the connected links is_connected <- road_network$links$id %in% connected_links connected_links_geom <- road_network$links$geometry[is_connected] plot(road_network, col = \"gray\") plot(connected_links_geom, add = TRUE, col = \"#E69F00\", lwd = 2) plot(road_network$nodes[3,]$geometry, add = TRUE, pch = 19)"},{"path":"https://nononoexe.github.io/pavement/reference/jdg2011_datum.html","id":null,"dir":"Reference","previous_headings":"","what":"Japan Geodetic Datum 2011 (JDG2011) Reference Points — jdg2011_datum","title":"Japan Geodetic Datum 2011 (JDG2011) Reference Points — jdg2011_datum","text":"dataset representing reference points Japan Geodetic Datum 2011 (JDG2011). dataset contains system numbers, longitude, latitude, corresponding coordinate reference system (CRS) codes various geodetic reference points Japan.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/jdg2011_datum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Japan Geodetic Datum 2011 (JDG2011) Reference Points — jdg2011_datum","text":"","code":"jdg2011_datum"},{"path":"https://nononoexe.github.io/pavement/reference/jdg2011_datum.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Japan Geodetic Datum 2011 (JDG2011) Reference Points — jdg2011_datum","text":"data.frame 19 rows 4 columns: system_no System number (Roman numeral -XIX) representing geodetic reference zones lon Longitude decimal degrees lat Latitude decimal degrees crs Coordinate reference system (CRS) code reference point","code":""},{"path":"https://nononoexe.github.io/pavement/reference/jdg2011_datum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Japan Geodetic Datum 2011 (JDG2011) Reference Points — jdg2011_datum","text":"","code":"# Show the dataset jdg2011_datum #>    system_no      lon lat  crs #> 1          I 129.5000  33 6669 #> 2         II 131.0000  33 6670 #> 3        III 132.1667  36 6671 #> 4         IV 133.5000  33 6672 #> 5          V 134.3333  36 6673 #> 6         VI 136.0000  36 6674 #> 7        VII 137.1667  36 6675 #> 8       VIII 138.5000  36 6676 #> 9         IX 139.8333  36 6677 #> 10         X 140.8333  40 6678 #> 11        XI 140.2500  44 6679 #> 12       XII 142.2500  44 6680 #> 13      XIII 144.2500  44 6681 #> 14       XIV 142.0000  26 6682 #> 15        XV 127.5000  26 6683 #> 16       XVI 124.0000  26 6684 #> 17      XVII 131.0000  26 6685 #> 18     XVIII 136.0000  20 6686 #> 19       XIX 154.0000  26 6687"},{"path":"https://nononoexe.github.io/pavement/reference/osm_highway_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Values for the 'highway' tag in OpenStreetMap data — osm_highway_values","title":"Values for the 'highway' tag in OpenStreetMap data — osm_highway_values","text":"osm_highway_values contains character vector values 'highway' tag OpenStreetMap data.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/osm_highway_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Values for the 'highway' tag in OpenStreetMap data — osm_highway_values","text":"","code":"osm_highway_values"},{"path":"https://nononoexe.github.io/pavement/reference/osm_highway_values.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Values for the 'highway' tag in OpenStreetMap data — osm_highway_values","text":"character vector length 12.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/osm_highway_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Values for the 'highway' tag in OpenStreetMap data — osm_highway_values","text":"","code":"osm_highway_values #>  [1] \"motorway\"       \"trunk\"          \"primary\"        \"secondary\"      #>  [5] \"tertiary\"       \"unclassified\"   \"residential\"    \"motorway_link\"  #>  [9] \"trunk_link\"     \"primary_link\"   \"secondary_link\" \"tertiary_link\""},{"path":"https://nononoexe.github.io/pavement/reference/pavement-package.html","id":null,"dir":"Reference","previous_headings":"","what":"pavement: Analyzing Spatial Events on Roadways — pavement-package","title":"pavement: Analyzing Spatial Events on Roadways — pavement-package","text":"Pavement package designed analyze spatial events occurring roadways. provides comprehensive toolkit working spatial data, empowering users understand patterns trends road-related phenomena.","code":""},{"path":[]},{"path":"https://nononoexe.github.io/pavement/reference/pavement-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"pavement: Analyzing Spatial Events on Roadways — pavement-package","text":"Maintainer: Keisuke ANDO ando@maslab.aitech.ac.jp (ORCID) contributors: Takeshi UCHITANE [thesis advisor] Naoto MUKAI [thesis advisor] Kazunori IWATA [thesis advisor] Nobuhiro ITO [thesis advisor] Yong JIANG [thesis advisor]","code":""},{"path":"https://nononoexe.github.io/pavement/reference/plot.road_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a road network — plot.road_network","title":"Plot a road network — plot.road_network","text":"function plots road network.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/plot.road_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a road network — plot.road_network","text":"","code":"# S3 method for class 'road_network' plot(x, y, mode = c(\"default\", \"event\", \"graph\"), ...)"},{"path":"https://nononoexe.github.io/pavement/reference/plot.road_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a road network — plot.road_network","text":"x road network object. y argument used. mode plotting mode. \"event\" mode shows location events assigned road network. \"graph\" mode shows direction links network directed. utilizes plot.igraph function. ... Additional arguments passed methods.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/plot.road_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a road network — plot.road_network","text":"","code":"# Create the road network road_network <- create_road_network(sample_roads, events = sample_accidents)  # Plot the road network plot(road_network)   # Plot the road network with events plot(road_network, mode = \"event\")   # Plot the road network as a graph plot(road_network, mode = \"graph\")"},{"path":"https://nononoexe.github.io/pavement/reference/remove_points_near_endpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove points near endpoints of a linestring — remove_points_near_endpoints","title":"Remove points near endpoints of a linestring — remove_points_near_endpoints","text":"function removes points set points within specified tolerance distance start end point linestring.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/remove_points_near_endpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove points near endpoints of a linestring — remove_points_near_endpoints","text":"","code":"remove_points_near_endpoints(points, linestring, tolerance = 0.01)"},{"path":"https://nononoexe.github.io/pavement/reference/remove_points_near_endpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove points near endpoints of a linestring — remove_points_near_endpoints","text":"points sfc object containing points filter. linestring linestring object. tolerance numeric value representing maximum distance line's ends consider points filtering. Points within distance excluded.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/remove_points_near_endpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove points near endpoints of a linestring — remove_points_near_endpoints","text":"sfc object containing filtered points.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/remove_points_near_endpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove points near endpoints of a linestring — remove_points_near_endpoints","text":"","code":"# Create a points points <- create_points(   0.000, 1.000, 0.500, 0.600, 1.000, 0.010, 1.500, 0.501, 2.000, 0.990 )  # Create a linestring linestring <- create_linestring(0, 1, 1, 0, 2, 1)  # Plot the points plot(linestring, col = \"gray\") plot(points, add = TRUE)   # Filter points within a tolerance distance (default: 0.01) filtered_points <- remove_points_near_endpoints(points, linestring)  # Plot the filtered points plot(linestring, col = \"gray\") plot(filtered_points, add = TRUE)"},{"path":"https://nononoexe.github.io/pavement/reference/road_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a road network from roads — road_network","title":"Create a road network from roads — road_network","text":"function constructs road network set roads. road network represented nodes links nodes. Nodes defined intersections roads endpoints road segments.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/road_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a road network from roads — road_network","text":"","code":"create_road_network(roads, directed = FALSE, events = NULL, ...)"},{"path":"https://nononoexe.github.io/pavement/reference/road_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a road network from roads — road_network","text":"roads linestring object representing roads. directed Logical indicating whether road network directed. events sf object representing events. ... Additional arguments passed methods.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/road_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a road network from roads — road_network","text":"road network object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/road_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a road network from roads — road_network","text":"","code":"# Create the road network road_network <- create_road_network(sample_roads)  # Print the road network summary road_network #> Road network #> Nodes: #>          id  parent_road num_overlaps    geometry #> 1 jn_000001      rd_0001            1 POINT (0 0) #> 2 jn_000002 rd_0001,....            3 POINT (4 3) #> 3 jn_000003 rd_0002,....            2 POINT (6 1) #> 4 jn_000004      rd_0002            1 POINT (0 1) #> 5 jn_000005      rd_0002            1 POINT (7 1) #> ... 5 more nodes #>  #> Links: #>          id      from        to parent_road                       geometry #> 1 lk_000001 jn_000001 jn_000002     rd_0001     LINESTRING (0 0, 3 0, 4 3) #> 2 lk_000002 jn_000003 jn_000005     rd_0002          LINESTRING (6 1, 7 1) #> 3 lk_000003 jn_000004 jn_000003     rd_0002          LINESTRING (0 1, 6 1) #> 4 lk_000004 jn_000006 jn_000006     rd_0003 LINESTRING (2 3, 1 4, 0 3, ... #> 5 lk_000005 jn_000006 jn_000002     rd_0004          LINESTRING (2 3, 4 3) #> ... 5 more links  # Plot the road network plot(road_network)"},{"path":"https://nononoexe.github.io/pavement/reference/sample_accidents.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample accidents data — sample_accidents","title":"Sample accidents data — sample_accidents","text":"sample dataset containing information 10 accidents. dataset demonstration testing represent real-world events.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/sample_accidents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample accidents data — sample_accidents","text":"","code":"sample_accidents"},{"path":"https://nononoexe.github.io/pavement/reference/sample_accidents.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample accidents data — sample_accidents","text":"sf object 10 rows 4 columns: id Accident ID time Time accident (hours) weather Weather condition time accident severity Severity accident geometry Point geometry accident location","code":""},{"path":"https://nononoexe.github.io/pavement/reference/sample_accidents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample accidents data — sample_accidents","text":"","code":"# Show information about the accidents sample_accidents #> Simple feature collection with 10 features and 4 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 1 ymin: 0.4 xmax: 6.5 ymax: 3.1 #> CRS:           NA #>         id time weather severity        geometry #> 1  ac_0001   18   Sunny    Minor     POINT (1 1) #> 2  ac_0002    4   Foggy    Fatal POINT (3.2 0.4) #> 3  ac_0003   13   Snowy    Minor POINT (4.1 3.1) #> 4  ac_0004   23   Sunny    Minor POINT (5.7 3.1) #> 5  ac_0005    7   Rainy    Minor POINT (5.9 1.1) #> 6  ac_0006    7   Sunny    Minor     POINT (6 3) #> 7  ac_0007   19  Cloudy    Minor POINT (6.1 0.9) #> 8  ac_0008    8   Sunny    Minor POINT (6.1 1.2) #> 9  ac_0009   19   Rainy  Serious POINT (6.2 2.9) #> 10 ac_000a   20   Sunny    Minor   POINT (6.5 3)  # Plot the locations of the accidents plot(sample_roads$geometry) plot(sample_accidents$geometry, pch = 4, col = \"red\", add = TRUE)"},{"path":"https://nononoexe.github.io/pavement/reference/sample_points_along_linestring.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample points along a linestring — sample_points_along_linestring","title":"Sample points along a linestring — sample_points_along_linestring","text":"function samples points regular intervals along linestring object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/sample_points_along_linestring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample points along a linestring — sample_points_along_linestring","text":"","code":"sample_points_along_linestring(linestrings, segment_length)"},{"path":"https://nononoexe.github.io/pavement/reference/sample_points_along_linestring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample points along a linestring — sample_points_along_linestring","text":"linestrings sfc object containing linestrings. segment_length desired length segment sampled points.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/sample_points_along_linestring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample points along a linestring — sample_points_along_linestring","text":"sfc object containing sampled points.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/sample_points_along_linestring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample points along a linestring — sample_points_along_linestring","text":"","code":"library(sf)  # Create a linestrings linestrings <- c(   create_linestring(0, 1, 2, 1),   create_linestring(1, 1.3, 1, 0, 2, 0.5) )  # Sample points along the linestrings sampled_points <- sample_points_along_linestring(linestrings, 0.5)  # Plot the sampled points plot(linestrings) plot(sampled_points, add = TRUE, pch = 16, col = c(\"#E69F00\", \"#56B4E9\"))"},{"path":"https://nononoexe.github.io/pavement/reference/sample_roads.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample roads data — sample_roads","title":"Sample roads data — sample_roads","text":"sample dataset representing simple roads. intended demonstration testing represent real-world roads.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/sample_roads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample roads data — sample_roads","text":"","code":"sample_roads"},{"path":"https://nononoexe.github.io/pavement/reference/sample_roads.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample roads data — sample_roads","text":"sf linestring object 6 rows 2 columns: id Road ID layer Layer road (indicates road elevated structure bridge, tunnel, highway) geometry Linestring geometry road","code":""},{"path":"https://nononoexe.github.io/pavement/reference/sample_roads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample roads data — sample_roads","text":"","code":"# Show information about the roads sample_roads #> Simple feature collection with 6 features and 2 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 0 xmax: 7 ymax: 5 #> CRS:           NA #>        id layer                       geometry #> 1 rd_0001     1     LINESTRING (0 0, 3 0, 4 3) #> 2 rd_0002    NA          LINESTRING (0 1, 7 1) #> 3 rd_0003    NA LINESTRING (2 3, 1 4, 0 3, ... #> 4 rd_0004    NA          LINESTRING (2 3, 4 3) #> 5 rd_0005    NA          LINESTRING (4 3, 7 3) #> 6 rd_0006    NA          LINESTRING (6 0, 6 5)  # Shape of the roads plot(sample_roads$geometry)"},{"path":"https://nononoexe.github.io/pavement/reference/segmented_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a segmented road network — segmented_network","title":"Create a segmented road network — segmented_network","text":"function creates segmented road network dividing link input road network segments specified length.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/segmented_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a segmented road network — segmented_network","text":"","code":"create_segmented_network(road_network, segment_length = 1, events = NULL, ...)  # S3 method for class 'road_network' create_segmented_network(road_network, segment_length = 1, events = NULL, ...)"},{"path":"https://nononoexe.github.io/pavement/reference/segmented_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a segmented road network — segmented_network","text":"road_network road_network object representing input road network. segment_length numeric value specifying length segment. events sf object representing events. ... Additional arguments passed methods.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/segmented_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a segmented road network — segmented_network","text":"segmented_network object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/segmented_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a segmented road network — segmented_network","text":"","code":"# Create a road network road_network <- create_road_network(sample_roads)  # Create a segmented road network segmented_network <- create_segmented_network(   road_network,   segment_length = 0.5 ) segmented_network #> Segmented network #> Segment length:  0.5 #> Segments: #>            id        from          to parent_link parent_road count density #> 1 sl_00000001 sn_00000001 sn_00000003   lk_000001     rd_0001     0       0 #> 2 sl_00000002 sn_00000003 sn_00000004   lk_000001     rd_0001     0       0 #> 3 sl_00000003 sn_00000004 sn_00000005   lk_000001     rd_0001     0       0 #> 4 sl_00000004 sn_00000005 sn_00000006   lk_000001     rd_0001     0       0 #> 5 sl_00000005 sn_00000006 sn_00000007   lk_000001     rd_0001     0       0 #>                         geometry #> 1  LINESTRING (0 0, 0.5135231 0) #> 2 LINESTRING (0.5135231 0, 1.... #> 3 LINESTRING (1.027046 0, 1.5... #> 4 LINESTRING (1.540569 0, 2.0... #> 5 LINESTRING (2.054093 0, 2.5... #> ... 52 more segments  # Plot the segmented road network plot(segmented_network)"},{"path":"https://nononoexe.github.io/pavement/reference/set_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Set events on a space. — set_events","title":"Set events on a space. — set_events","text":"function sets events space.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/set_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set events on a space. — set_events","text":"","code":"set_events(x, events, ...)"},{"path":"https://nononoexe.github.io/pavement/reference/set_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set events on a space. — set_events","text":"x space object. events sf spatiotemporal events object. ... Additional arguments passed methods.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/set_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set events on a space. — set_events","text":"input object events added.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/set_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set events on a space. — set_events","text":"","code":"# Create the road network road_network <- create_road_network(sample_roads)  # Set accidents on the road network road_network <- set_events(road_network, sample_accidents)"},{"path":"https://nononoexe.github.io/pavement/reference/spatiotemporal_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a spatiotemporal event collection — spatiotemporal_events","title":"Create a spatiotemporal event collection — spatiotemporal_events","text":"function creates spatiotemporal event collection object given sf object, allowing spatial temporal data handled together.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/spatiotemporal_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a spatiotemporal event collection — spatiotemporal_events","text":"","code":"create_spatiotemporal_events(x, ...)  # S3 method for class 'sf' create_spatiotemporal_events(   x,   time_column_name = \"time\",   time_format = \"%H\",   ... )"},{"path":"https://nononoexe.github.io/pavement/reference/spatiotemporal_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a spatiotemporal event collection — spatiotemporal_events","text":"x sf object representing spatial data. ... Additional arguments passed methods. time_column_name character string specifying column name x contains time-related data. Defaults \"time\" time_format character string specifying format time data time_column_name. example, can use formats like \"%Y-%m-%d\" dates \"%H:%M:%S\" time. Defaults \"%H\".","code":""},{"path":"https://nononoexe.github.io/pavement/reference/spatiotemporal_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a spatiotemporal event collection — spatiotemporal_events","text":"sf object class spatiotemporal_events added, representing spatiotemporal event collection.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/spatiotemporal_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a spatiotemporal event collection — spatiotemporal_events","text":"","code":"# Simple feature collection object representing accidents sample_accidents #> Simple feature collection with 10 features and 4 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 1 ymin: 0.4 xmax: 6.5 ymax: 3.1 #> CRS:           NA #>         id time weather severity        geometry #> 1  ac_0001   18   Sunny    Minor     POINT (1 1) #> 2  ac_0002    4   Foggy    Fatal POINT (3.2 0.4) #> 3  ac_0003   13   Snowy    Minor POINT (4.1 3.1) #> 4  ac_0004   23   Sunny    Minor POINT (5.7 3.1) #> 5  ac_0005    7   Rainy    Minor POINT (5.9 1.1) #> 6  ac_0006    7   Sunny    Minor     POINT (6 3) #> 7  ac_0007   19  Cloudy    Minor POINT (6.1 0.9) #> 8  ac_0008    8   Sunny    Minor POINT (6.1 1.2) #> 9  ac_0009   19   Rainy  Serious POINT (6.2 2.9) #> 10 ac_000a   20   Sunny    Minor   POINT (6.5 3)  # Create a spatiotemporal event collection create_spatiotemporal_events(sample_accidents) #> Spatiotemporal event collection with 10 events and 3 fields #> Geometry type: POINT #> Time column:   time #> Time format:   %H #> Data: #>        id time weather severity        geometry #> 1 ac_0001   18   Sunny    Minor     POINT (1 1) #> 2 ac_0002    4   Foggy    Fatal POINT (3.2 0.4) #> 3 ac_0003   13   Snowy    Minor POINT (4.1 3.1) #> 4 ac_0004   23   Sunny    Minor POINT (5.7 3.1) #> 5 ac_0005    7   Rainy    Minor POINT (5.9 1.1) #> ... 5 more events"},{"path":"https://nononoexe.github.io/pavement/reference/spatiotemporal_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Create spatiotemporal network — spatiotemporal_network","title":"Create spatiotemporal network — spatiotemporal_network","text":"function creates spatiotemporal network road network.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/spatiotemporal_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create spatiotemporal network — spatiotemporal_network","text":"","code":"create_spatiotemporal_network(   road_network,   spatial_length = 1,   temporal_length = \"1 hour\",   events = NULL,   ... )"},{"path":"https://nononoexe.github.io/pavement/reference/spatiotemporal_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create spatiotemporal network — spatiotemporal_network","text":"road_network road_network object. spatial_length spatial length segment. temporal_length temporal length segment. events event collection object. ... Additional arguments passed methods.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/spatiotemporal_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create spatiotemporal network — spatiotemporal_network","text":"spatiotemporal_network object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/spatiotemporal_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create spatiotemporal network — spatiotemporal_network","text":"","code":"# Create a road network road_network <- create_road_network(sample_roads)  # Create a spatiotemporal road network spatiotemporal_network <- create_spatiotemporal_network(   road_network,   spatial_length = 0.5,   temporal_length = \"4 hour\" ) spatiotemporal_network #> $segments #>                id    geometry duration count density #> 1   ts_0000000001 sl_00000001  ti_0001     0       0 #> 2   ts_0000000002 sl_00000002  ti_0001     0       0 #> 3   ts_0000000003 sl_00000003  ti_0001     0       0 #> 4   ts_0000000004 sl_00000004  ti_0001     0       0 #> 5   ts_0000000005 sl_00000005  ti_0001     0       0 #> 6   ts_0000000006 sl_00000006  ti_0001     0       0 #> 7   ts_0000000007 sl_00000007  ti_0001     0       0 #> 8   ts_0000000008 sl_00000008  ti_0001     0       0 #> 9   ts_0000000009 sl_00000009  ti_0001     0       0 #> 10  ts_000000000a sl_0000000a  ti_0001     0       0 #> 11  ts_000000000b sl_0000000b  ti_0001     0       0 #> 12  ts_000000000c sl_0000000c  ti_0001     0       0 #> 13  ts_000000000d sl_0000000d  ti_0001     0       0 #> 14  ts_000000000e sl_0000000e  ti_0001     0       0 #> 15  ts_000000000f sl_0000000f  ti_0001     0       0 #> 16  ts_0000000010 sl_00000010  ti_0001     0       0 #> 17  ts_0000000011 sl_00000011  ti_0001     0       0 #> 18  ts_0000000012 sl_00000012  ti_0001     0       0 #> 19  ts_0000000013 sl_00000013  ti_0001     0       0 #> 20  ts_0000000014 sl_00000014  ti_0001     0       0 #> 21  ts_0000000015 sl_00000015  ti_0001     0       0 #> 22  ts_0000000016 sl_00000016  ti_0001     0       0 #> 23  ts_0000000017 sl_00000017  ti_0001     0       0 #> 24  ts_0000000018 sl_00000018  ti_0001     0       0 #> 25  ts_0000000019 sl_00000019  ti_0001     0       0 #> 26  ts_000000001a sl_0000001a  ti_0001     0       0 #> 27  ts_000000001b sl_0000001b  ti_0001     0       0 #> 28  ts_000000001c sl_0000001c  ti_0001     0       0 #> 29  ts_000000001d sl_0000001d  ti_0001     0       0 #> 30  ts_000000001e sl_0000001e  ti_0001     0       0 #> 31  ts_000000001f sl_0000001f  ti_0001     0       0 #> 32  ts_0000000020 sl_00000020  ti_0001     0       0 #> 33  ts_0000000021 sl_00000021  ti_0001     0       0 #> 34  ts_0000000022 sl_00000022  ti_0001     0       0 #> 35  ts_0000000023 sl_00000023  ti_0001     0       0 #> 36  ts_0000000024 sl_00000024  ti_0001     0       0 #> 37  ts_0000000025 sl_00000025  ti_0001     0       0 #> 38  ts_0000000026 sl_00000026  ti_0001     0       0 #> 39  ts_0000000027 sl_00000027  ti_0001     0       0 #> 40  ts_0000000028 sl_00000028  ti_0001     0       0 #> 41  ts_0000000029 sl_00000029  ti_0001     0       0 #> 42  ts_000000002a sl_0000002a  ti_0001     0       0 #> 43  ts_000000002b sl_0000002b  ti_0001     0       0 #> 44  ts_000000002c sl_0000002c  ti_0001     0       0 #> 45  ts_000000002d sl_0000002d  ti_0001     0       0 #> 46  ts_000000002e sl_0000002e  ti_0001     0       0 #> 47  ts_000000002f sl_0000002f  ti_0001     0       0 #> 48  ts_0000000030 sl_00000030  ti_0001     0       0 #> 49  ts_0000000031 sl_00000031  ti_0001     0       0 #> 50  ts_0000000032 sl_00000032  ti_0001     0       0 #> 51  ts_0000000033 sl_00000033  ti_0001     0       0 #> 52  ts_0000000034 sl_00000034  ti_0001     0       0 #> 53  ts_0000000035 sl_00000035  ti_0001     0       0 #> 54  ts_0000000036 sl_00000036  ti_0001     0       0 #> 55  ts_0000000037 sl_00000037  ti_0001     0       0 #> 56  ts_0000000038 sl_00000038  ti_0001     0       0 #> 57  ts_0000000039 sl_00000039  ti_0001     0       0 #> 58  ts_000000003a sl_00000001  ti_0002     0       0 #> 59  ts_000000003b sl_00000002  ti_0002     0       0 #> 60  ts_000000003c sl_00000003  ti_0002     0       0 #> 61  ts_000000003d sl_00000004  ti_0002     0       0 #> 62  ts_000000003e sl_00000005  ti_0002     0       0 #> 63  ts_000000003f sl_00000006  ti_0002     0       0 #> 64  ts_0000000040 sl_00000007  ti_0002     0       0 #> 65  ts_0000000041 sl_00000008  ti_0002     0       0 #> 66  ts_0000000042 sl_00000009  ti_0002     0       0 #> 67  ts_0000000043 sl_0000000a  ti_0002     0       0 #> 68  ts_0000000044 sl_0000000b  ti_0002     0       0 #> 69  ts_0000000045 sl_0000000c  ti_0002     0       0 #> 70  ts_0000000046 sl_0000000d  ti_0002     0       0 #> 71  ts_0000000047 sl_0000000e  ti_0002     0       0 #> 72  ts_0000000048 sl_0000000f  ti_0002     0       0 #> 73  ts_0000000049 sl_00000010  ti_0002     0       0 #> 74  ts_000000004a sl_00000011  ti_0002     0       0 #> 75  ts_000000004b sl_00000012  ti_0002     0       0 #> 76  ts_000000004c sl_00000013  ti_0002     0       0 #> 77  ts_000000004d sl_00000014  ti_0002     0       0 #> 78  ts_000000004e sl_00000015  ti_0002     0       0 #> 79  ts_000000004f sl_00000016  ti_0002     0       0 #> 80  ts_0000000050 sl_00000017  ti_0002     0       0 #> 81  ts_0000000051 sl_00000018  ti_0002     0       0 #> 82  ts_0000000052 sl_00000019  ti_0002     0       0 #> 83  ts_0000000053 sl_0000001a  ti_0002     0       0 #> 84  ts_0000000054 sl_0000001b  ti_0002     0       0 #> 85  ts_0000000055 sl_0000001c  ti_0002     0       0 #> 86  ts_0000000056 sl_0000001d  ti_0002     0       0 #> 87  ts_0000000057 sl_0000001e  ti_0002     0       0 #> 88  ts_0000000058 sl_0000001f  ti_0002     0       0 #> 89  ts_0000000059 sl_00000020  ti_0002     0       0 #> 90  ts_000000005a sl_00000021  ti_0002     0       0 #> 91  ts_000000005b sl_00000022  ti_0002     0       0 #> 92  ts_000000005c sl_00000023  ti_0002     0       0 #> 93  ts_000000005d sl_00000024  ti_0002     0       0 #> 94  ts_000000005e sl_00000025  ti_0002     0       0 #> 95  ts_000000005f sl_00000026  ti_0002     0       0 #> 96  ts_0000000060 sl_00000027  ti_0002     0       0 #> 97  ts_0000000061 sl_00000028  ti_0002     0       0 #> 98  ts_0000000062 sl_00000029  ti_0002     0       0 #> 99  ts_0000000063 sl_0000002a  ti_0002     0       0 #> 100 ts_0000000064 sl_0000002b  ti_0002     0       0 #> 101 ts_0000000065 sl_0000002c  ti_0002     0       0 #> 102 ts_0000000066 sl_0000002d  ti_0002     0       0 #> 103 ts_0000000067 sl_0000002e  ti_0002     0       0 #> 104 ts_0000000068 sl_0000002f  ti_0002     0       0 #> 105 ts_0000000069 sl_00000030  ti_0002     0       0 #> 106 ts_000000006a sl_00000031  ti_0002     0       0 #> 107 ts_000000006b sl_00000032  ti_0002     0       0 #> 108 ts_000000006c sl_00000033  ti_0002     0       0 #> 109 ts_000000006d sl_00000034  ti_0002     0       0 #> 110 ts_000000006e sl_00000035  ti_0002     0       0 #> 111 ts_000000006f sl_00000036  ti_0002     0       0 #> 112 ts_0000000070 sl_00000037  ti_0002     0       0 #> 113 ts_0000000071 sl_00000038  ti_0002     0       0 #> 114 ts_0000000072 sl_00000039  ti_0002     0       0 #> 115 ts_0000000073 sl_00000001  ti_0003     0       0 #> 116 ts_0000000074 sl_00000002  ti_0003     0       0 #> 117 ts_0000000075 sl_00000003  ti_0003     0       0 #> 118 ts_0000000076 sl_00000004  ti_0003     0       0 #> 119 ts_0000000077 sl_00000005  ti_0003     0       0 #> 120 ts_0000000078 sl_00000006  ti_0003     0       0 #> 121 ts_0000000079 sl_00000007  ti_0003     0       0 #> 122 ts_000000007a sl_00000008  ti_0003     0       0 #> 123 ts_000000007b sl_00000009  ti_0003     0       0 #> 124 ts_000000007c sl_0000000a  ti_0003     0       0 #> 125 ts_000000007d sl_0000000b  ti_0003     0       0 #> 126 ts_000000007e sl_0000000c  ti_0003     0       0 #> 127 ts_000000007f sl_0000000d  ti_0003     0       0 #> 128 ts_0000000080 sl_0000000e  ti_0003     0       0 #> 129 ts_0000000081 sl_0000000f  ti_0003     0       0 #> 130 ts_0000000082 sl_00000010  ti_0003     0       0 #> 131 ts_0000000083 sl_00000011  ti_0003     0       0 #> 132 ts_0000000084 sl_00000012  ti_0003     0       0 #> 133 ts_0000000085 sl_00000013  ti_0003     0       0 #> 134 ts_0000000086 sl_00000014  ti_0003     0       0 #> 135 ts_0000000087 sl_00000015  ti_0003     0       0 #> 136 ts_0000000088 sl_00000016  ti_0003     0       0 #> 137 ts_0000000089 sl_00000017  ti_0003     0       0 #> 138 ts_000000008a sl_00000018  ti_0003     0       0 #> 139 ts_000000008b sl_00000019  ti_0003     0       0 #> 140 ts_000000008c sl_0000001a  ti_0003     0       0 #> 141 ts_000000008d sl_0000001b  ti_0003     0       0 #> 142 ts_000000008e sl_0000001c  ti_0003     0       0 #> 143 ts_000000008f sl_0000001d  ti_0003     0       0 #> 144 ts_0000000090 sl_0000001e  ti_0003     0       0 #> 145 ts_0000000091 sl_0000001f  ti_0003     0       0 #> 146 ts_0000000092 sl_00000020  ti_0003     0       0 #> 147 ts_0000000093 sl_00000021  ti_0003     0       0 #> 148 ts_0000000094 sl_00000022  ti_0003     0       0 #> 149 ts_0000000095 sl_00000023  ti_0003     0       0 #> 150 ts_0000000096 sl_00000024  ti_0003     0       0 #> 151 ts_0000000097 sl_00000025  ti_0003     0       0 #> 152 ts_0000000098 sl_00000026  ti_0003     0       0 #> 153 ts_0000000099 sl_00000027  ti_0003     0       0 #> 154 ts_000000009a sl_00000028  ti_0003     0       0 #> 155 ts_000000009b sl_00000029  ti_0003     0       0 #> 156 ts_000000009c sl_0000002a  ti_0003     0       0 #> 157 ts_000000009d sl_0000002b  ti_0003     0       0 #> 158 ts_000000009e sl_0000002c  ti_0003     0       0 #> 159 ts_000000009f sl_0000002d  ti_0003     0       0 #> 160 ts_00000000a0 sl_0000002e  ti_0003     0       0 #> 161 ts_00000000a1 sl_0000002f  ti_0003     0       0 #> 162 ts_00000000a2 sl_00000030  ti_0003     0       0 #> 163 ts_00000000a3 sl_00000031  ti_0003     0       0 #> 164 ts_00000000a4 sl_00000032  ti_0003     0       0 #> 165 ts_00000000a5 sl_00000033  ti_0003     0       0 #> 166 ts_00000000a6 sl_00000034  ti_0003     0       0 #> 167 ts_00000000a7 sl_00000035  ti_0003     0       0 #> 168 ts_00000000a8 sl_00000036  ti_0003     0       0 #> 169 ts_00000000a9 sl_00000037  ti_0003     0       0 #> 170 ts_00000000aa sl_00000038  ti_0003     0       0 #> 171 ts_00000000ab sl_00000039  ti_0003     0       0 #> 172 ts_00000000ac sl_00000001  ti_0004     0       0 #> 173 ts_00000000ad sl_00000002  ti_0004     0       0 #> 174 ts_00000000ae sl_00000003  ti_0004     0       0 #> 175 ts_00000000af sl_00000004  ti_0004     0       0 #> 176 ts_00000000b0 sl_00000005  ti_0004     0       0 #> 177 ts_00000000b1 sl_00000006  ti_0004     0       0 #> 178 ts_00000000b2 sl_00000007  ti_0004     0       0 #> 179 ts_00000000b3 sl_00000008  ti_0004     0       0 #> 180 ts_00000000b4 sl_00000009  ti_0004     0       0 #> 181 ts_00000000b5 sl_0000000a  ti_0004     0       0 #> 182 ts_00000000b6 sl_0000000b  ti_0004     0       0 #> 183 ts_00000000b7 sl_0000000c  ti_0004     0       0 #> 184 ts_00000000b8 sl_0000000d  ti_0004     0       0 #> 185 ts_00000000b9 sl_0000000e  ti_0004     0       0 #> 186 ts_00000000ba sl_0000000f  ti_0004     0       0 #> 187 ts_00000000bb sl_00000010  ti_0004     0       0 #> 188 ts_00000000bc sl_00000011  ti_0004     0       0 #> 189 ts_00000000bd sl_00000012  ti_0004     0       0 #> 190 ts_00000000be sl_00000013  ti_0004     0       0 #> 191 ts_00000000bf sl_00000014  ti_0004     0       0 #> 192 ts_00000000c0 sl_00000015  ti_0004     0       0 #> 193 ts_00000000c1 sl_00000016  ti_0004     0       0 #> 194 ts_00000000c2 sl_00000017  ti_0004     0       0 #> 195 ts_00000000c3 sl_00000018  ti_0004     0       0 #> 196 ts_00000000c4 sl_00000019  ti_0004     0       0 #> 197 ts_00000000c5 sl_0000001a  ti_0004     0       0 #> 198 ts_00000000c6 sl_0000001b  ti_0004     0       0 #> 199 ts_00000000c7 sl_0000001c  ti_0004     0       0 #> 200 ts_00000000c8 sl_0000001d  ti_0004     0       0 #> 201 ts_00000000c9 sl_0000001e  ti_0004     0       0 #> 202 ts_00000000ca sl_0000001f  ti_0004     0       0 #> 203 ts_00000000cb sl_00000020  ti_0004     0       0 #> 204 ts_00000000cc sl_00000021  ti_0004     0       0 #> 205 ts_00000000cd sl_00000022  ti_0004     0       0 #> 206 ts_00000000ce sl_00000023  ti_0004     0       0 #> 207 ts_00000000cf sl_00000024  ti_0004     0       0 #> 208 ts_00000000d0 sl_00000025  ti_0004     0       0 #> 209 ts_00000000d1 sl_00000026  ti_0004     0       0 #> 210 ts_00000000d2 sl_00000027  ti_0004     0       0 #> 211 ts_00000000d3 sl_00000028  ti_0004     0       0 #> 212 ts_00000000d4 sl_00000029  ti_0004     0       0 #> 213 ts_00000000d5 sl_0000002a  ti_0004     0       0 #> 214 ts_00000000d6 sl_0000002b  ti_0004     0       0 #> 215 ts_00000000d7 sl_0000002c  ti_0004     0       0 #> 216 ts_00000000d8 sl_0000002d  ti_0004     0       0 #> 217 ts_00000000d9 sl_0000002e  ti_0004     0       0 #> 218 ts_00000000da sl_0000002f  ti_0004     0       0 #> 219 ts_00000000db sl_00000030  ti_0004     0       0 #> 220 ts_00000000dc sl_00000031  ti_0004     0       0 #> 221 ts_00000000dd sl_00000032  ti_0004     0       0 #> 222 ts_00000000de sl_00000033  ti_0004     0       0 #> 223 ts_00000000df sl_00000034  ti_0004     0       0 #> 224 ts_00000000e0 sl_00000035  ti_0004     0       0 #> 225 ts_00000000e1 sl_00000036  ti_0004     0       0 #> 226 ts_00000000e2 sl_00000037  ti_0004     0       0 #> 227 ts_00000000e3 sl_00000038  ti_0004     0       0 #> 228 ts_00000000e4 sl_00000039  ti_0004     0       0 #> 229 ts_00000000e5 sl_00000001  ti_0005     0       0 #> 230 ts_00000000e6 sl_00000002  ti_0005     0       0 #> 231 ts_00000000e7 sl_00000003  ti_0005     0       0 #> 232 ts_00000000e8 sl_00000004  ti_0005     0       0 #> 233 ts_00000000e9 sl_00000005  ti_0005     0       0 #> 234 ts_00000000ea sl_00000006  ti_0005     0       0 #> 235 ts_00000000eb sl_00000007  ti_0005     0       0 #> 236 ts_00000000ec sl_00000008  ti_0005     0       0 #> 237 ts_00000000ed sl_00000009  ti_0005     0       0 #> 238 ts_00000000ee sl_0000000a  ti_0005     0       0 #> 239 ts_00000000ef sl_0000000b  ti_0005     0       0 #> 240 ts_00000000f0 sl_0000000c  ti_0005     0       0 #> 241 ts_00000000f1 sl_0000000d  ti_0005     0       0 #> 242 ts_00000000f2 sl_0000000e  ti_0005     0       0 #> 243 ts_00000000f3 sl_0000000f  ti_0005     0       0 #> 244 ts_00000000f4 sl_00000010  ti_0005     0       0 #> 245 ts_00000000f5 sl_00000011  ti_0005     0       0 #> 246 ts_00000000f6 sl_00000012  ti_0005     0       0 #> 247 ts_00000000f7 sl_00000013  ti_0005     0       0 #> 248 ts_00000000f8 sl_00000014  ti_0005     0       0 #> 249 ts_00000000f9 sl_00000015  ti_0005     0       0 #> 250 ts_00000000fa sl_00000016  ti_0005     0       0 #> 251 ts_00000000fb sl_00000017  ti_0005     0       0 #> 252 ts_00000000fc sl_00000018  ti_0005     0       0 #> 253 ts_00000000fd sl_00000019  ti_0005     0       0 #> 254 ts_00000000fe sl_0000001a  ti_0005     0       0 #> 255 ts_00000000ff sl_0000001b  ti_0005     0       0 #> 256 ts_0000000100 sl_0000001c  ti_0005     0       0 #> 257 ts_0000000101 sl_0000001d  ti_0005     0       0 #> 258 ts_0000000102 sl_0000001e  ti_0005     0       0 #> 259 ts_0000000103 sl_0000001f  ti_0005     0       0 #> 260 ts_0000000104 sl_00000020  ti_0005     0       0 #> 261 ts_0000000105 sl_00000021  ti_0005     0       0 #> 262 ts_0000000106 sl_00000022  ti_0005     0       0 #> 263 ts_0000000107 sl_00000023  ti_0005     0       0 #> 264 ts_0000000108 sl_00000024  ti_0005     0       0 #> 265 ts_0000000109 sl_00000025  ti_0005     0       0 #> 266 ts_000000010a sl_00000026  ti_0005     0       0 #> 267 ts_000000010b sl_00000027  ti_0005     0       0 #> 268 ts_000000010c sl_00000028  ti_0005     0       0 #> 269 ts_000000010d sl_00000029  ti_0005     0       0 #> 270 ts_000000010e sl_0000002a  ti_0005     0       0 #> 271 ts_000000010f sl_0000002b  ti_0005     0       0 #> 272 ts_0000000110 sl_0000002c  ti_0005     0       0 #> 273 ts_0000000111 sl_0000002d  ti_0005     0       0 #> 274 ts_0000000112 sl_0000002e  ti_0005     0       0 #> 275 ts_0000000113 sl_0000002f  ti_0005     0       0 #> 276 ts_0000000114 sl_00000030  ti_0005     0       0 #> 277 ts_0000000115 sl_00000031  ti_0005     0       0 #> 278 ts_0000000116 sl_00000032  ti_0005     0       0 #> 279 ts_0000000117 sl_00000033  ti_0005     0       0 #> 280 ts_0000000118 sl_00000034  ti_0005     0       0 #> 281 ts_0000000119 sl_00000035  ti_0005     0       0 #> 282 ts_000000011a sl_00000036  ti_0005     0       0 #> 283 ts_000000011b sl_00000037  ti_0005     0       0 #> 284 ts_000000011c sl_00000038  ti_0005     0       0 #> 285 ts_000000011d sl_00000039  ti_0005     0       0 #> 286 ts_000000011e sl_00000001  ti_0006     0       0 #> 287 ts_000000011f sl_00000002  ti_0006     0       0 #> 288 ts_0000000120 sl_00000003  ti_0006     0       0 #> 289 ts_0000000121 sl_00000004  ti_0006     0       0 #> 290 ts_0000000122 sl_00000005  ti_0006     0       0 #> 291 ts_0000000123 sl_00000006  ti_0006     0       0 #> 292 ts_0000000124 sl_00000007  ti_0006     0       0 #> 293 ts_0000000125 sl_00000008  ti_0006     0       0 #> 294 ts_0000000126 sl_00000009  ti_0006     0       0 #> 295 ts_0000000127 sl_0000000a  ti_0006     0       0 #> 296 ts_0000000128 sl_0000000b  ti_0006     0       0 #> 297 ts_0000000129 sl_0000000c  ti_0006     0       0 #> 298 ts_000000012a sl_0000000d  ti_0006     0       0 #> 299 ts_000000012b sl_0000000e  ti_0006     0       0 #> 300 ts_000000012c sl_0000000f  ti_0006     0       0 #> 301 ts_000000012d sl_00000010  ti_0006     0       0 #> 302 ts_000000012e sl_00000011  ti_0006     0       0 #> 303 ts_000000012f sl_00000012  ti_0006     0       0 #> 304 ts_0000000130 sl_00000013  ti_0006     0       0 #> 305 ts_0000000131 sl_00000014  ti_0006     0       0 #> 306 ts_0000000132 sl_00000015  ti_0006     0       0 #> 307 ts_0000000133 sl_00000016  ti_0006     0       0 #> 308 ts_0000000134 sl_00000017  ti_0006     0       0 #> 309 ts_0000000135 sl_00000018  ti_0006     0       0 #> 310 ts_0000000136 sl_00000019  ti_0006     0       0 #> 311 ts_0000000137 sl_0000001a  ti_0006     0       0 #> 312 ts_0000000138 sl_0000001b  ti_0006     0       0 #> 313 ts_0000000139 sl_0000001c  ti_0006     0       0 #> 314 ts_000000013a sl_0000001d  ti_0006     0       0 #> 315 ts_000000013b sl_0000001e  ti_0006     0       0 #> 316 ts_000000013c sl_0000001f  ti_0006     0       0 #> 317 ts_000000013d sl_00000020  ti_0006     0       0 #> 318 ts_000000013e sl_00000021  ti_0006     0       0 #> 319 ts_000000013f sl_00000022  ti_0006     0       0 #> 320 ts_0000000140 sl_00000023  ti_0006     0       0 #> 321 ts_0000000141 sl_00000024  ti_0006     0       0 #> 322 ts_0000000142 sl_00000025  ti_0006     0       0 #> 323 ts_0000000143 sl_00000026  ti_0006     0       0 #> 324 ts_0000000144 sl_00000027  ti_0006     0       0 #> 325 ts_0000000145 sl_00000028  ti_0006     0       0 #> 326 ts_0000000146 sl_00000029  ti_0006     0       0 #> 327 ts_0000000147 sl_0000002a  ti_0006     0       0 #> 328 ts_0000000148 sl_0000002b  ti_0006     0       0 #> 329 ts_0000000149 sl_0000002c  ti_0006     0       0 #> 330 ts_000000014a sl_0000002d  ti_0006     0       0 #> 331 ts_000000014b sl_0000002e  ti_0006     0       0 #> 332 ts_000000014c sl_0000002f  ti_0006     0       0 #> 333 ts_000000014d sl_00000030  ti_0006     0       0 #> 334 ts_000000014e sl_00000031  ti_0006     0       0 #> 335 ts_000000014f sl_00000032  ti_0006     0       0 #> 336 ts_0000000150 sl_00000033  ti_0006     0       0 #> 337 ts_0000000151 sl_00000034  ti_0006     0       0 #> 338 ts_0000000152 sl_00000035  ti_0006     0       0 #> 339 ts_0000000153 sl_00000036  ti_0006     0       0 #> 340 ts_0000000154 sl_00000037  ti_0006     0       0 #> 341 ts_0000000155 sl_00000038  ti_0006     0       0 #> 342 ts_0000000156 sl_00000039  ti_0006     0       0 #>  #> $segment_geometries #> Simple feature collection with 57 features and 7 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 0 xmax: 7 ymax: 5 #> CRS:           NA #> First 10 features: #>             id        from          to parent_link parent_road count density #> 1  sl_00000001 sn_00000001 sn_00000003   lk_000001     rd_0001     0       0 #> 2  sl_00000002 sn_00000003 sn_00000004   lk_000001     rd_0001     0       0 #> 3  sl_00000003 sn_00000004 sn_00000005   lk_000001     rd_0001     0       0 #> 4  sl_00000004 sn_00000005 sn_00000006   lk_000001     rd_0001     0       0 #> 5  sl_00000005 sn_00000006 sn_00000007   lk_000001     rd_0001     0       0 #> 6  sl_00000006 sn_00000007 sn_00000008   lk_000001     rd_0001     0       0 #> 7  sl_00000007 sn_00000008 sn_00000009   lk_000001     rd_0001     0       0 #> 8  sl_00000008 sn_00000009 sn_0000000a   lk_000001     rd_0001     0       0 #> 9  sl_00000009 sn_0000000a sn_0000000b   lk_000001     rd_0001     0       0 #> 10 sl_0000000a sn_0000000b sn_0000000c   lk_000001     rd_0001     0       0 #>                          geometry #> 1   LINESTRING (0 0, 0.5135231 0) #> 2  LINESTRING (0.5135231 0, 1.... #> 3  LINESTRING (1.027046 0, 1.5... #> 4  LINESTRING (1.540569 0, 2.0... #> 5  LINESTRING (2.054093 0, 2.5... #> 6  LINESTRING (2.567616 0, 3 0... #> 7  LINESTRING (3.025658 0.0769... #> 8  LINESTRING (3.188049 0.5641... #> 9  LINESTRING (3.350439 1.0513... #> 10 LINESTRING (3.512829 1.5384... #>  #> $segment_durations #>        id                                         duration #> 1 ti_0001 2025-02-08 00:00:00 UTC--2025-02-08 03:59:59 UTC #> 2 ti_0002 2025-02-08 04:00:00 UTC--2025-02-08 07:59:59 UTC #> 3 ti_0003 2025-02-08 08:00:00 UTC--2025-02-08 11:59:59 UTC #> 4 ti_0004 2025-02-08 12:00:00 UTC--2025-02-08 15:59:59 UTC #> 5 ti_0005 2025-02-08 16:00:00 UTC--2025-02-08 19:59:59 UTC #> 6 ti_0006 2025-02-08 20:00:00 UTC--2025-02-08 23:59:59 UTC #>  #> $spatial_graph #> IGRAPH 86ba4d8 UNW- 57 57 --  #> + attr: name (v/c), x (v/n), y (v/n), name (e/c), x (e/n), y (e/n), #> | weight (e/n) #> + edges from 86ba4d8 (vertex names): #>  [1] sn_00000001--sn_00000003 sn_00000003--sn_00000004 sn_00000004--sn_00000005 #>  [4] sn_00000005--sn_00000006 sn_00000006--sn_00000007 sn_00000007--sn_00000008 #>  [7] sn_00000008--sn_00000009 sn_00000009--sn_0000000a sn_0000000a--sn_0000000b #> [10] sn_0000000b--sn_0000000c sn_0000000c--sn_0000000d sn_00000002--sn_0000000d #> [13] sn_0000000e--sn_00000010 sn_0000000f--sn_00000010 sn_00000011--sn_00000012 #> [16] sn_00000012--sn_00000013 sn_00000013--sn_00000014 sn_00000014--sn_00000015 #> [19] sn_00000015--sn_00000016 sn_00000016--sn_00000017 sn_00000017--sn_00000018 #> + ... omitted several edges #>  #> $origin_network #> Road network #> Nodes: #>          id  parent_road num_overlaps    geometry #> 1 jn_000001      rd_0001            1 POINT (0 0) #> 2 jn_000002 rd_0001,....            3 POINT (4 3) #> 3 jn_000003 rd_0002,....            2 POINT (6 1) #> 4 jn_000004      rd_0002            1 POINT (0 1) #> 5 jn_000005      rd_0002            1 POINT (7 1) #> ... 5 more nodes #>  #> Links: #>          id      from        to parent_road                       geometry #> 1 lk_000001 jn_000001 jn_000002     rd_0001     LINESTRING (0 0, 3 0, 4 3) #> 2 lk_000002 jn_000003 jn_000005     rd_0002          LINESTRING (6 1, 7 1) #> 3 lk_000003 jn_000004 jn_000003     rd_0002          LINESTRING (0 1, 6 1) #> 4 lk_000004 jn_000006 jn_000006     rd_0003 LINESTRING (2 3, 1 4, 0 3, ... #> 5 lk_000005 jn_000006 jn_000002     rd_0004          LINESTRING (2 3, 4 3) #> ... 5 more links #>  #> $spatial_length #> [1] 0.5 #>  #> $temporal_length #> [1] \"4 hour\" #>  #> attr(,\"class\") #> [1] \"spatiotemporal_network\"  # Plot the spatiotemporal road network plot(spatiotemporal_network)"},{"path":"https://nononoexe.github.io/pavement/reference/split_linestring.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a linestring into multiple segments — split_linestring","title":"Split a linestring into multiple segments — split_linestring","text":"Split linestring multiple segments","code":""},{"path":"https://nononoexe.github.io/pavement/reference/split_linestring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a linestring into multiple segments — split_linestring","text":"","code":"split_linestring(linestring, split_points, tolerance = 0.01)"},{"path":"https://nononoexe.github.io/pavement/reference/split_linestring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a linestring into multiple segments — split_linestring","text":"linestring linestring object. split_points sfc object containing points split linestring. tolerance numeric value representing maximum distance allowed linestring split points. distance split point linestring exceeds value, point used split linestring.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/split_linestring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a linestring into multiple segments — split_linestring","text":"sfc object containing split linestrings.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/split_linestring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a linestring into multiple segments — split_linestring","text":"","code":"# Create a linestring linestring <- create_linestring(0, -1, 0, 1, 2, 1, 2, 0, 0, 0)  # Create a set of split points split_points <- create_points(0, 0, 1, 1, 2, 0)  # Plot the linestring and split points plot(linestring) plot(split_points, add = TRUE)   # Split the linestring segments <- split_linestring(linestring, split_points)  # Plot the split linestrings plot(segments, col = c(\"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\"), lwd = 2)"},{"path":"https://nononoexe.github.io/pavement/reference/transform_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform to Cartesian or geographic coordinates — transform_coordinates","title":"Transform to Cartesian or geographic coordinates — transform_coordinates","text":"function transforms spatial object Cartesian coordinates (plane rectangular coordinate system) geographic coordinates (WGS84; EPSG:4326). Cartesian system currently supports Aichi Prefecture's JDG2011 system (EPSG:6675).","code":""},{"path":"https://nononoexe.github.io/pavement/reference/transform_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform to Cartesian or geographic coordinates — transform_coordinates","text":"","code":"transform_coordinates(   spatial_object,   target = c(\"cartesian\", \"geographic\"),   quiet = FALSE )  transform_to_cartesian(spatial_object, quiet = FALSE)  transform_to_geographic(spatial_object, quiet = FALSE)"},{"path":"https://nononoexe.github.io/pavement/reference/transform_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform to Cartesian or geographic coordinates — transform_coordinates","text":"spatial_object spatial object. target character string specifying target coordinate system: \"cartesian\" (EPSG:6675) \"geographic\" (EPSG:4326). quiet Logical. TRUE, suppresses warning CRS missing.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/transform_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform to Cartesian or geographic coordinates — transform_coordinates","text":"spatial object transformed specified coordinate system.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/transform_coordinates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform to Cartesian or geographic coordinates — transform_coordinates","text":"CRS missing (NA), warning issued, original object returned. warning can suppressed quiet argument.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/transform_coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform to Cartesian or geographic coordinates — transform_coordinates","text":"","code":"# Create points points <- create_points(136.9024, 35.1649, crs = 4326) points #> Geometry set for 1 feature  #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 136.9024 ymin: 35.1649 xmax: 136.9024 ymax: 35.1649 #> Geodetic CRS:  WGS 84 #> POINT (136.9024 35.1649)  # Transform to Cartesian coordinates transformed <- transform_to_cartesian(points) transformed #> Geometry set for 1 feature  #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -24073.54 ymin: -92614.18 xmax: -24073.54 ymax: -92614.18 #> Projected CRS: JGD2011 / Japan Plane Rectangular CS VII #> POINT (-24073.54 -92614.18)  # Transform to geographic coordinates transformed <- transform_to_geographic(points) transformed #> Geometry set for 1 feature  #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 136.9024 ymin: 35.1649 xmax: 136.9024 ymax: 35.1649 #> Geodetic CRS:  WGS 84 #> POINT (136.9024 35.1649)"}]
