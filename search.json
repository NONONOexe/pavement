[{"path":[]},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement ando@maslab.aitech.ac.jp. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://nononoexe.github.io/pavement/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://nononoexe.github.io/pavement/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 pavement authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nononoexe.github.io/pavement/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Keisuke Ando. Author, maintainer. Takeshi Uchitane. Thesis advisor. Naoto Mukai. Thesis advisor. Kazunori Iwata. Thesis advisor. Nobuhiro Ito. Thesis advisor. Yong Jiang. Thesis advisor.","code":""},{"path":"https://nononoexe.github.io/pavement/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ando K (2024). pavement: Analyzing Spatial Events Roadways. R package version 0.0.1, https://nononoexe.github.io/pavement/, https://github.com/NONONOexe/pavement.","code":"@Manual{,   title = {pavement: Analyzing Spatial Events on Roadways},   author = {Keisuke Ando},   year = {2024},   note = {R package version 0.0.1, https://nononoexe.github.io/pavement/},   url = {https://github.com/NONONOexe/pavement}, }"},{"path":[]},{"path":"https://nononoexe.github.io/pavement/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Analyzing Spatial Events on Roadways","text":"pavement package designed analyze spatial events occurring roadways. provides comprehensive toolkit working spatial data, empowering users understand patterns trends road-related phenomena.","code":""},{"path":"https://nononoexe.github.io/pavement/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyzing Spatial Events on Roadways","text":"can install development version pavement R-universe :","code":"# Enable the R-universe options(repos = c(   nononoexe = \"https://nononoexe.r-universe.dev\",   cran = \"https://cloud.r-project.org\" ))  # Install the package install.packages(\"pavement\")"},{"path":"https://nononoexe.github.io/pavement/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Analyzing Spatial Events on Roadways","text":"example demonstrates visualize distribution roads traffic accidents using pavement:","code":"library(pavement)  segmented_network <- sample_roads |>   create_road_network() |>   create_segmented_network(segment_length = 0.5) |>   assign_event_to_link(events = sample_accidents) plot(segmented_network, mode = \"event\") plot(segmented_network, mode = \"count\")"},{"path":"https://nononoexe.github.io/pavement/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Analyzing Spatial Events on Roadways","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/assign_event_to_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign events to the nearest link — assign_event_to_link","title":"Assign events to the nearest link — assign_event_to_link","text":"function assigns events nearest link segmented road network.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/assign_event_to_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign events to the nearest link — assign_event_to_link","text":"","code":"assign_event_to_link(segmented_network, events)"},{"path":"https://nononoexe.github.io/pavement/reference/assign_event_to_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign events to the nearest link — assign_event_to_link","text":"segmented_network segmented_network object, contains list segmented links nodes, representing segmented road network. events sf object representing events, traffic accidents, location information.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/assign_event_to_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign events to the nearest link — assign_event_to_link","text":"segmented_network object events assigned links. link count attribute indicating number events assigned .","code":""},{"path":"https://nononoexe.github.io/pavement/reference/assign_event_to_link.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign events to the nearest link — assign_event_to_link","text":"","code":"# Create the segmented road network road_network <- create_road_network(sample_roads) segmented_network <- create_segmented_network(road_network)  # Assign accidents to the nearest link segmented_network <- assign_event_to_link(   segmented_network,   sample_accidents )  # Plot the segmented road network with events plot(segmented_network, mode = \"event\")"},{"path":"https://nononoexe.github.io/pavement/reference/compute_epanechnikov.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Epanechnikov function — compute_epanechnikov","title":"Compute the Epanechnikov function — compute_epanechnikov","text":"Epanechnikov function one quadratic kernels used kernel density estimation. defined follows: $$K(x) = \\frac{3}{4}(1 - x^2) \\quad \\text{} \\quad |x| \\leq 1\\text{.}$$","code":""},{"path":"https://nononoexe.github.io/pavement/reference/compute_epanechnikov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Epanechnikov function — compute_epanechnikov","text":"","code":"compute_epanechnikov(x)"},{"path":"https://nononoexe.github.io/pavement/reference/compute_epanechnikov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Epanechnikov function — compute_epanechnikov","text":"x numeric vector.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/compute_epanechnikov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Epanechnikov function — compute_epanechnikov","text":"numeric vector weights kernel input points.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/compute_epanechnikov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Epanechnikov function — compute_epanechnikov","text":"","code":"x <- seq(-3, 3, 0.1) y <- compute_epanechnikov(x) plot(x, y, xlim = c(-3, 3), ylim = c(0, 1), type = \"l\")"},{"path":"https://nononoexe.github.io/pavement/reference/create_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a bounding box — create_bbox","title":"Create a bounding box — create_bbox","text":"function creates bounding box either cardinal coordinates (north, south, east west) center coordinates dimensions (center longitude latitude, size width height).","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a bounding box — create_bbox","text":"","code":"create_bbox(   north = NULL,   south = NULL,   east = NULL,   west = NULL,   center_lon = NULL,   center_lat = NULL,   width = NULL,   height = NULL )"},{"path":"https://nononoexe.github.io/pavement/reference/create_bbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a bounding box — create_bbox","text":"north northernmost latitude. south southernmost latitude. east easternmost longitude. west westernmost longitude. center_lon center longitude. center_lat center latitude. width width bounding box. height height bounding box.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_bbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a bounding box — create_bbox","text":"2x2 matrix representing bounding box.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_bbox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a bounding box — create_bbox","text":"","code":"# Create a bounding box from cardinal coordinates create_bbox(   north =  35.1899,   south =  35.1399,   east  = 136.9524,   west  = 136.8524 ) #>        min      max #> x 136.8524 136.9524 #> y  35.1399  35.1899  # Create a bounding box from center coordinates and dimensions create_bbox(   center_lon = 136.9024,   center_lat =  35.1649,   width      = 0.10,   height     = 0.05 ) #>        min      max #> x 136.8524 136.9524 #> y  35.1399  35.1899"},{"path":"https://nononoexe.github.io/pavement/reference/create_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a collection of coordinates. — create_coordinates","title":"Create a collection of coordinates. — create_coordinates","text":"function creates collection coordinates sequence x y coordinates.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a collection of coordinates. — create_coordinates","text":"","code":"create_coordinates(...)"},{"path":"https://nononoexe.github.io/pavement/reference/create_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a collection of coordinates. — create_coordinates","text":"... sequence x y coordinates.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a collection of coordinates. — create_coordinates","text":"coordinates object matrix x y columns.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a collection of coordinates. — create_coordinates","text":"","code":"# Create a `coordinates` object from a sequence of x and y coordinates create_coordinates(1, 2, 3, 4) #> {(1, 2), (3, 4)}  # Create a `coordinates` object from an with a vector of x and y # coordinates create_coordinates(c(1, 2, 3, 4)) #> {(1, 2), (3, 4)}"},{"path":"https://nononoexe.github.io/pavement/reference/create_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a graph from nodes and links — create_graph","title":"Create a graph from nodes and links — create_graph","text":"function creates graph object set nodes links.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a graph from nodes and links — create_graph","text":"","code":"create_graph(nodes, links, directed = FALSE)"},{"path":"https://nononoexe.github.io/pavement/reference/create_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a graph from nodes and links — create_graph","text":"nodes sf object representing nodes. links sf object representing links nodes. directed logical indicating whether graph directed.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a graph from nodes and links — create_graph","text":"igraph object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a graph from nodes and links — create_graph","text":"","code":"# Create nodes and links nodes <- extract_road_network_nodes(sample_roads) links <- extract_road_network_links(sample_roads, nodes)  # Create the graph graph <- create_graph(nodes, links)  # Plot the graph plot(graph)"},{"path":"https://nononoexe.github.io/pavement/reference/create_graph_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Create graph links from source and target nodes — create_graph_links","title":"Create graph links from source and target nodes — create_graph_links","text":"function creates data frame graph links set source target nodes.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_graph_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create graph links from source and target nodes — create_graph_links","text":"","code":"create_graph_links(   source_nodes,   target_nodes,   directed = FALSE,   unique_links = TRUE )"},{"path":"https://nononoexe.github.io/pavement/reference/create_graph_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create graph links from source and target nodes — create_graph_links","text":"source_nodes vector source node IDs. target_nodes vector target node IDs. directed FALSE, default, links undirected. TRUE, links directed. unique_links TRUE, default, links unique. Duplicate links removed. FALSE, duplicate links retained.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_graph_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create graph links from source and target nodes — create_graph_links","text":"data frame graph links columns .","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_graph_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create graph links from source and target nodes — create_graph_links","text":"","code":"# Create source and target nodes source_nodes <- c(\"jn_000001\", \"jn_000002\", \"jn_000002\") target_nodes <- c(\"jn_000002\", \"jn_000001\", \"jn_000003\")  # Create graph links (duplicate links are removed) create_graph_links(source_nodes, target_nodes) #>        from        to #> 1 jn_000001 jn_000002 #> 2 jn_000002 jn_000003"},{"path":"https://nononoexe.github.io/pavement/reference/create_graph_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data frame of nodes for a graph — create_graph_nodes","title":"Create a data frame of nodes for a graph — create_graph_nodes","text":"function creates data frame nodes graph set node IDs geometries.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_graph_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data frame of nodes for a graph — create_graph_nodes","text":"","code":"create_graph_nodes(node_ids, node_geometries)"},{"path":"https://nononoexe.github.io/pavement/reference/create_graph_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data frame of nodes for a graph — create_graph_nodes","text":"node_ids vector node IDs. node_geometries sfc_POINT object containing node geometries.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_graph_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data frame of nodes for a graph — create_graph_nodes","text":"data frame nodes columns id, x, y.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_graph_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a data frame of nodes for a graph — create_graph_nodes","text":"","code":"# Create node IDs and geometries node_ids <- c(\"jn_000001\", \"jn_000002\", \"jn_000003\")  # Create some node geometries node_geometries <- create_points(0, 1, 1, 0, 2, 1)  # Create a data frame of nodes create_graph_nodes(node_ids, node_geometries) #>          id x y #> 1 jn_000001 0 1 #> 2 jn_000002 1 0 #> 3 jn_000003 2 1"},{"path":"https://nononoexe.github.io/pavement/reference/create_linestring.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a linestring geometry — create_linestring","title":"Create a linestring geometry — create_linestring","text":"function creates simple feature linestring object series x, y coordinates.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_linestring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a linestring geometry — create_linestring","text":"","code":"create_linestring(...)  # S3 method for class 'numeric' create_linestring(..., crs = NULL)  # S3 method for class 'coordinates' create_linestring(coordinates, crs = NULL, ...)"},{"path":"https://nononoexe.github.io/pavement/reference/create_linestring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a linestring geometry — create_linestring","text":"... series x, y coordinates. crs coordinate reference system points. coordinates coordinates object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_linestring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a linestring geometry — create_linestring","text":"simple feature linestring object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_linestring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a linestring geometry — create_linestring","text":"","code":"# Create a linestring from individual coordinates linestring_1 <- create_linestring(0, 1, 1, 0, 2, 1) linestring_1 #> Geometry set for 1 feature  #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 0 xmax: 2 ymax: 1 #> CRS:           NA #> LINESTRING (0 1, 1 0, 2 1) plot(linestring_1)   # Create a linestring from a numeric vector linestring_2 <- create_linestring(   c(0, 1, 1, 1, 1, 0, 0, 0, 0, 0.5, 1, 0.5) ) linestring_2 #> Geometry set for 1 feature  #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 0 xmax: 1 ymax: 1 #> CRS:           NA #> LINESTRING (0 1, 1 1, 1 0, 0 0, 0 0.5, 1 0.5) plot(linestring_2)"},{"path":"https://nononoexe.github.io/pavement/reference/create_midpoint_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a midpoint graph from a network — create_midpoint_graph","title":"Create a midpoint graph from a network — create_midpoint_graph","text":"function creates midpoint graph nodes represent midpoints links input network.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_midpoint_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a midpoint graph from a network — create_midpoint_graph","text":"","code":"create_midpoint_graph(network)"},{"path":"https://nononoexe.github.io/pavement/reference/create_midpoint_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a midpoint graph from a network — create_midpoint_graph","text":"network road_network segmented_network object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_midpoint_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a midpoint graph from a network — create_midpoint_graph","text":"igraph object representing midpoint graph.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_midpoint_graph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a midpoint graph from a network — create_midpoint_graph","text":"","code":"# Create a road network network <- create_road_network(sample_roads)  # Plot the road network plot(network$graph)   # Create a midpoint graph from a road network graph <- create_midpoint_graph(network)  # Plot the midpoint graph plot(graph)"},{"path":"https://nononoexe.github.io/pavement/reference/create_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Create points geometry — create_points","title":"Create points geometry — create_points","text":"function creates simple feature collection points series x, y coordinates.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create points geometry — create_points","text":"","code":"create_points(...)  # S3 method for class 'numeric' create_points(..., crs = NULL)  # S3 method for class 'coordinates' create_points(coordinates, crs = NULL, ...)"},{"path":"https://nononoexe.github.io/pavement/reference/create_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create points geometry — create_points","text":"... series x, y coordinates. crs coordinate reference system points. coordinates coordinates object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create points geometry — create_points","text":"simple feature points object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create points geometry — create_points","text":"","code":"# Create a points from individual coordinates points_1 <- create_points(0, 1, 1, 0, 2, 1) points_1 #> Geometry set for 3 features  #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 0 xmax: 2 ymax: 1 #> CRS:           NA #> POINT (0 1) #> POINT (1 0) #> POINT (2 1) plot(points_1)   # Create a linestring from a numeric vector points_2 <- create_points(   c(0, 1, 1, 1, 1, 0, 0, 0, 0, 0.5, 1, 0.5) ) points_2 #> Geometry set for 6 features  #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 0 xmax: 1 ymax: 1 #> CRS:           NA #> First 5 geometries: #> POINT (0 1) #> POINT (1 1) #> POINT (1 0) #> POINT (0 0) #> POINT (0 0.5) plot(points_2)"},{"path":"https://nononoexe.github.io/pavement/reference/create_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Create polygon from bounding box — create_polygon","title":"Create polygon from bounding box — create_polygon","text":"function creates rectangle polygon bounding box.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create polygon from bounding box — create_polygon","text":"","code":"create_polygon(bbox)"},{"path":"https://nononoexe.github.io/pavement/reference/create_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create polygon from bounding box — create_polygon","text":"bbox numeric matrix two columns two rows. bbox represents minimum maximum coordinates.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create polygon from bounding box — create_polygon","text":"rectangle polygon size bbox.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_road_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a road network from roads — create_road_network","title":"Create a road network from roads — create_road_network","text":"function constructs road network set roads. road network represented nodes links nodes. Nodes defined intersections roads endpoints road segments.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_road_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a road network from roads — create_road_network","text":"","code":"create_road_network(roads, directed = FALSE)"},{"path":"https://nononoexe.github.io/pavement/reference/create_road_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a road network from roads — create_road_network","text":"roads linestring object representing roads. directed Logical indicating whether road network directed.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_road_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a road network from roads — create_road_network","text":"road network object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_road_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a road network from roads — create_road_network","text":"","code":"# Create the road network road_network <- create_road_network(sample_roads) road_network #> Road network #> Nodes: #>          id  parent_road num_overlaps    geometry #> 1 jn_000001      rd_0001            1 POINT (0 0) #> 2 jn_000002 rd_0001,....            3 POINT (4 3) #> 3 jn_000003 rd_0002,....            2 POINT (6 1) #> 4 jn_000004      rd_0002            1 POINT (0 1) #> 5 jn_000005      rd_0002            1 POINT (7 1) #> ... 5 more nodes #>  #> Links: #>          id      from        to parent_road                       geometry #> 1 lk_000001 jn_000001 jn_000002     rd_0001     LINESTRING (0 0, 3 0, 4 3) #> 2 lk_000002 jn_000003 jn_000005     rd_0002          LINESTRING (6 1, 7 1) #> 3 lk_000003 jn_000004 jn_000003     rd_0002          LINESTRING (0 1, 6 1) #> 4 lk_000004 jn_000006 jn_000006     rd_0003 LINESTRING (2 3, 1 4, 0 3, ... #> 5 lk_000005 jn_000006 jn_000002     rd_0004          LINESTRING (2 3, 4 3) #> ... 5 more links  # Plot the road network plot(road_network)"},{"path":"https://nononoexe.github.io/pavement/reference/create_segmented_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a segmented road network — create_segmented_network","title":"Create a segmented road network — create_segmented_network","text":"function creates segmented road network dividing link input road network segments specified length.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_segmented_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a segmented road network — create_segmented_network","text":"","code":"create_segmented_network(road_network, segment_length = 1)"},{"path":"https://nononoexe.github.io/pavement/reference/create_segmented_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a segmented road network — create_segmented_network","text":"road_network road_network object representing input road network. segment_length numeric value specifying length segment.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_segmented_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a segmented road network — create_segmented_network","text":"segmented_network object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/create_segmented_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a segmented road network — create_segmented_network","text":"","code":"# Create a road network road_network <- create_road_network(sample_roads)  # Create a segmented road network segmented_network <- create_segmented_network(road_network) segmented_network #> Segmented network #> Segment length:  1  #> Nodes: #>            id  parent_link  parent_road                    geometry #> 1 sn_00000001    lk_000001      rd_0001                 POINT (0 0) #> 2 sn_00000002 lk_00000.... rd_0001,....                 POINT (4 3) #> 3 sn_00000003    lk_000001      rd_0001          POINT (1.027046 0) #> 4 sn_00000004    lk_000001      rd_0001          POINT (2.054093 0) #> 5 sn_00000005    lk_000001      rd_0001 POINT (3.025658 0.07697505) #> ... 24 more nodes #>  #> Links: #>            id        from          to parent_link parent_road count density #> 1 sl_00000001 sn_00000001 sn_00000003   lk_000001     rd_0001     0       0 #> 2 sl_00000002 sn_00000003 sn_00000004   lk_000001     rd_0001     0       0 #> 3 sl_00000003 sn_00000004 sn_00000005   lk_000001     rd_0001     0       0 #> 4 sl_00000004 sn_00000005 sn_00000006   lk_000001     rd_0001     0       0 #> 5 sl_00000005 sn_00000006 sn_00000007   lk_000001     rd_0001     0       0 #>                         geometry #> 1   LINESTRING (0 0, 1.027046 0) #> 2 LINESTRING (1.027046 0, 2.0... #> 3 LINESTRING (2.054093 0, 3 0... #> 4 LINESTRING (3.025658 0.0769... #> 5 LINESTRING (3.350439 1.0513... #> ... 24 more links #>  #> Events: None  # Plot the segmented road network plot(segmented_network)"},{"path":"https://nononoexe.github.io/pavement/reference/decompose_linestring.html","id":null,"dir":"Reference","previous_headings":"","what":"Decompose a linestring into a list of line segments — decompose_linestring","title":"Decompose a linestring into a list of line segments — decompose_linestring","text":"function decomposes linestring list line segments, segment linestring connecting two consecutive points input linestring.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/decompose_linestring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decompose a linestring into a list of line segments — decompose_linestring","text":"","code":"decompose_linestring(linestring)"},{"path":"https://nononoexe.github.io/pavement/reference/decompose_linestring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decompose a linestring into a list of line segments — decompose_linestring","text":"linestring linestring object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/decompose_linestring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decompose a linestring into a list of line segments — decompose_linestring","text":"list linestring objects, representing segment input linestring.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/decompose_linestring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decompose a linestring into a list of line segments — decompose_linestring","text":"","code":"# Create a linestring object linestring <- create_linestring(0, -1, 0, 1, 2, 1, 2, 0, 0, 0) plot(linestring)   # Decompose the linestring into line segments segments <- decompose_linestring(linestring) plot(segments, col = c(\"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\"))"},{"path":"https://nononoexe.github.io/pavement/reference/download_roads.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and process OpenStreetMap road data — download_roads","title":"Download and process OpenStreetMap road data — download_roads","text":"function downloads OpenStreetMap highway data within specified bounding box. corrects geometries reversed one-way roads. Optionally, crops data bounding box.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/download_roads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and process OpenStreetMap road data — download_roads","text":"","code":"download_roads(bbox, crop = TRUE)"},{"path":"https://nononoexe.github.io/pavement/reference/download_roads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and process OpenStreetMap road data — download_roads","text":"bbox bounding box form matrix two rows two columns. crop logical value indicating whether crop data bounding box. Defaults TRUE.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/download_roads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and process OpenStreetMap road data — download_roads","text":"data frame containing OpenStreetMap road data.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/download_roads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and process OpenStreetMap road data — download_roads","text":"","code":"if (FALSE) { # \\dontrun{ # Download road data bbox <- create_bbox(   north =  35.17377,   south =  35.16377,   east  = 136.91590,   west  = 136.90090 ) roads <- download_roads(bbox)  # Plot the roads plot(roads$geometry) } # }"},{"path":"https://nononoexe.github.io/pavement/reference/exclude_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Exclude points from a points — exclude_points","title":"Exclude points from a points — exclude_points","text":"function excludes points points.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/exclude_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exclude points from a points — exclude_points","text":"","code":"exclude_points(input_points, points_to_exclude)"},{"path":"https://nononoexe.github.io/pavement/reference/exclude_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exclude points from a points — exclude_points","text":"input_points sfc object containing points. points_to_exclude sfc object containing points exclude.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/exclude_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exclude points from a points — exclude_points","text":"sfc object containing points input_points points_to_exclude.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/exclude_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exclude points from a points — exclude_points","text":"","code":"# Create a set of points and a set of points to exclude points <- create_points(0, 0, 1, 0, 0, 1, 1, 1) points_to_exclude <- create_points(0, 0, 1, 1) plot(points) plot(points_to_exclude, add = TRUE, pch = 4)   # Exclude points in `points_to_exclude` from `points` remain_points <- exclude_points(points, points_to_exclude) plot(remain_points)"},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_endpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract road endpoints — extract_road_endpoints","title":"Extract road endpoints — extract_road_endpoints","text":"function extracts endpoints set roads. identifies counts roads intersect endpoint.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_endpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract road endpoints — extract_road_endpoints","text":"","code":"extract_road_endpoints(roads)"},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_endpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract road endpoints — extract_road_endpoints","text":"roads linestring object representing roads. column named road_id.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_endpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract road endpoints — extract_road_endpoints","text":"points object representing road endpoints. endpoint following columns: parent_road: list road IDs intersect endpoint. num_overlaps: number roads intersect endpoint.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_intersections.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract road intersections — extract_road_intersections","title":"Extract road intersections — extract_road_intersections","text":"function identifies extracts intersections roads. considers intersections multiple roads layer.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_intersections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract road intersections — extract_road_intersections","text":"","code":"extract_road_intersections(roads)"},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_intersections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract road intersections — extract_road_intersections","text":"roads linestring object representing roads. column named layer column named road_id.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_intersections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract road intersections — extract_road_intersections","text":"data frame following columns: parent_road: list road IDs intersect intersection. num_overlaps: number roads intersect intersection.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_intersections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract road intersections — extract_road_intersections","text":"","code":"# Extract road intersections intersections <- extract_road_intersections(sample_roads) intersections #> Simple feature collection with 3 features and 2 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 2 ymin: 1 xmax: 6 ymax: 3 #> CRS:           NA #>    parent_road num_overlaps    geometry #> 1 rd_0003,....            2 POINT (2 3) #> 2 rd_0002,....            2 POINT (6 1) #> 3 rd_0005,....            2 POINT (6 3)  # Plot the intersections plot(sample_roads$geometry) plot(intersections$geometry, pch = 16, col = \"#E69F00\", add = TRUE)"},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_network_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract road network links — extract_road_network_links","title":"Extract road network links — extract_road_network_links","text":"function extracts road network links set road geometries. splits road geometries nodes creates new sf object representing road network links.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_network_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract road network links — extract_road_network_links","text":"","code":"extract_road_network_links(roads, nodes)"},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_network_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract road network links — extract_road_network_links","text":"roads linestring object representing roads. nodes point object representing road network nodes.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_network_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract road network links — extract_road_network_links","text":"linestring object representing road network links.","code":""},{"path":[]},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_network_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract road network nodes — extract_road_network_nodes","title":"Extract road network nodes — extract_road_network_nodes","text":"function extracts nodes roads represented linestring objects downloaded OpenStreetMap. Nodes defined intersections roads endpoints road segments.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_network_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract road network nodes — extract_road_network_nodes","text":"","code":"extract_road_network_nodes(roads)"},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_network_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract road network nodes — extract_road_network_nodes","text":"roads linestring object representing roads.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_road_network_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract road network nodes — extract_road_network_nodes","text":"points object representing road network nodes.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract segmented network links from a road network — extract_segmented_network_links","title":"Extract segmented network links from a road network — extract_segmented_network_links","text":"function extracts segmented network links road network based specified set segmented network nodes. splits linestrings road network links points segmented network nodes create segmented network links.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract segmented network links from a road network — extract_segmented_network_links","text":"","code":"extract_segmented_network_links(   road_network,   segmented_network_nodes,   tolerance = 1e-05 )"},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract segmented network links from a road network — extract_segmented_network_links","text":"road_network road_network object created create_road_network() segmented_network_nodes data frame representing segmented network nodes. tolerance numeric value representing maximum distance allowed linestring road link point segmented network node. distance exceeds value, point used split linestring.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract segmented network links from a road network — extract_segmented_network_links","text":"data frame representing segmented network links.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract segmented network links from a road network — extract_segmented_network_links","text":"","code":"# Create a road network road_network <- create_road_network(sample_roads)  # Extract segmented network nodes by length of 1 segmented_network_nodes <- extract_segmented_network_nodes(road_network, 1)  # Extract segmented network links segmented_network_links <- extract_segmented_network_links(   road_network,   segmented_network_nodes ) segmented_network_links #> Simple feature collection with 29 features and 7 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 0 xmax: 7 ymax: 5 #> CRS:           NA #> First 10 features: #>             id        from          to parent_link parent_road count density #> 1  sl_00000001 sn_00000001 sn_00000003   lk_000001     rd_0001     0       0 #> 2  sl_00000002 sn_00000003 sn_00000004   lk_000001     rd_0001     0       0 #> 3  sl_00000003 sn_00000004 sn_00000005   lk_000001     rd_0001     0       0 #> 4  sl_00000004 sn_00000005 sn_00000006   lk_000001     rd_0001     0       0 #> 5  sl_00000005 sn_00000006 sn_00000007   lk_000001     rd_0001     0       0 #> 6  sl_00000006 sn_00000007 sn_00000002   lk_000001     rd_0001     0       0 #> 7  sl_00000007 sn_00000008 sn_00000009   lk_000002     rd_0002     0       0 #> 8  sl_00000008 sn_0000000a sn_0000000b   lk_000003     rd_0002     0       0 #> 9  sl_00000009 sn_0000000b sn_0000000c   lk_000003     rd_0002     0       0 #> 10 sl_0000000a sn_0000000c sn_0000000d   lk_000003     rd_0002     0       0 #>                          geometry #> 1    LINESTRING (0 0, 1.027046 0) #> 2  LINESTRING (1.027046 0, 2.0... #> 3  LINESTRING (2.054093 0, 3 0... #> 4  LINESTRING (3.025658 0.0769... #> 5  LINESTRING (3.350439 1.0513... #> 6  LINESTRING (3.675219 2.0256... #> 7           LINESTRING (6 1, 7 1) #> 8           LINESTRING (0 1, 1 1) #> 9           LINESTRING (1 1, 2 1) #> 10          LINESTRING (2 1, 3 1)  # Plot the segmented network nodes and links plot(segmented_network_links$geometry, col = \"#E69F00\") plot(segmented_network_nodes$geometry, pch = 16, add = TRUE)"},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract nodes of segmented network from a road network — extract_segmented_network_nodes","title":"Extract nodes of segmented network from a road network — extract_segmented_network_nodes","text":"function extracts nodes regular intervals along link road network","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract nodes of segmented network from a road network — extract_segmented_network_nodes","text":"","code":"extract_segmented_network_nodes(road_network, segment_length)"},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract nodes of segmented network from a road network — extract_segmented_network_nodes","text":"road_network road_network object created create_network(). segment_length length segment sample along links.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_nodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract nodes of segmented network from a road network — extract_segmented_network_nodes","text":"sf object sampled points.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/extract_segmented_network_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract nodes of segmented network from a road network — extract_segmented_network_nodes","text":"","code":"# Create a road network road_network <- create_road_network(sample_roads)  # Extract nodes with a segment length of 1 segmented_network_nodes <- extract_segmented_network_nodes(road_network, 1) segmented_network_nodes #> Simple feature collection with 29 features and 3 fields #> Attribute-geometry relationships: constant (2), NA's (1) #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 0 xmax: 7 ymax: 5 #> CRS:           NA #> First 10 features: #>             id  parent_link  parent_road                    geometry #> 1  sn_00000001    lk_000001      rd_0001                 POINT (0 0) #> 2  sn_00000002 lk_00000.... rd_0001,....                 POINT (4 3) #> 3  sn_00000003    lk_000001      rd_0001          POINT (1.027046 0) #> 4  sn_00000004    lk_000001      rd_0001          POINT (2.054093 0) #> 5  sn_00000005    lk_000001      rd_0001 POINT (3.025658 0.07697505) #> 6  sn_00000006    lk_000001      rd_0001   POINT (3.350439 1.051317) #> 7  sn_00000007    lk_000001      rd_0001   POINT (3.675219 2.025658) #> 8  sn_00000008 lk_00000.... rd_0002,....                 POINT (6 1) #> 9  sn_00000009    lk_000002      rd_0002                 POINT (7 1) #> 10 sn_0000000a    lk_000003      rd_0002                 POINT (0 1)  # Plot the segmented network nodes plot(road_network) plot(segmented_network_nodes$geometry, add = TRUE, pch = 16, col = \"#E69F00\")"},{"path":"https://nononoexe.github.io/pavement/reference/filter_points_within_tolerance.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter points within a tolerance distance — filter_points_within_tolerance","title":"Filter points within a tolerance distance — filter_points_within_tolerance","text":"function filters points within specified tolerance distance reference linestring.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/filter_points_within_tolerance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter points within a tolerance distance — filter_points_within_tolerance","text":"","code":"filter_points_within_tolerance(points, linestring, tolerance = 0.01)"},{"path":"https://nononoexe.github.io/pavement/reference/filter_points_within_tolerance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter points within a tolerance distance — filter_points_within_tolerance","text":"points sfc object containing points filter. linestring linestring object. tolerance numeric value representing maximum allowable distance points linestring. Points within distance linestring included filtered set.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/filter_points_within_tolerance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter points within a tolerance distance — filter_points_within_tolerance","text":"sfc object containing filtered points.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/filter_points_within_tolerance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter points within a tolerance distance — filter_points_within_tolerance","text":"","code":"# Create a points points <- create_points(   0.000, 1.000, 0.500, 0.600, 1.000, 0.010, 1.500, 0.501, 2.000, 0.990 )  # Create a linestring linestring <- create_linestring(0, 1, 1, 0, 2, 1)  # Plot the points plot(linestring, col = \"gray\") plot(points, add = TRUE)   # Filter points within a tolerance distance (default: 0.01) filtered_points <- filter_points_within_tolerance(points, linestring)  # Plot the filtered points plot(linestring, col = \"gray\") plot(filtered_points, add = TRUE)"},{"path":"https://nononoexe.github.io/pavement/reference/generate_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate unique IDs based on parent IDs — generate_ids","title":"Generate unique IDs based on parent IDs — generate_ids","text":"function generates unique IDs based parent IDs. first extracts first ID parent ID, ranks IDs uses ranks format IDs.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/generate_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate unique IDs based on parent IDs — generate_ids","text":"","code":"generate_ids(parent_list, id_format)"},{"path":"https://nononoexe.github.io/pavement/reference/generate_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate unique IDs based on parent IDs — generate_ids","text":"parent_list list parent IDs. id_format format string IDs.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/generate_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate unique IDs based on parent IDs — generate_ids","text":"vector unique IDs.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/generate_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate unique IDs based on parent IDs — generate_ids","text":"","code":"parent_list <- c(\"rd_0001\", \"rd_0002\", \"rd_0003\") id_format <- \"jn_%06x\" generate_ids(parent_list, id_format) #> [1] \"jn_000001\" \"jn_000002\" \"jn_000003\""},{"path":"https://nononoexe.github.io/pavement/reference/get_adjacent_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Get adjacent links of a specified link — get_adjacent_links","title":"Get adjacent links of a specified link — get_adjacent_links","text":"function returns vector link IDs adjacent specified link road network.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/get_adjacent_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get adjacent links of a specified link — get_adjacent_links","text":"","code":"get_adjacent_links(network, link_ids, reachable_only = FALSE)"},{"path":"https://nononoexe.github.io/pavement/reference/get_adjacent_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get adjacent links of a specified link — get_adjacent_links","text":"network road_network segmented_network object. link_ids ID link find adjacent links . reachable_only FALSE, default, adjacent links returned. TRUE, reachable links returned.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/get_adjacent_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get adjacent links of a specified link — get_adjacent_links","text":"vector link ID adjacent specified link.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/get_adjacent_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get adjacent links of a specified link — get_adjacent_links","text":"","code":"# Create a road network road_network <- create_road_network(sample_roads) target_link <- road_network$links$id[7] target_link #> [1] \"lk_000007\"  # Get adjacent links adjacent_links <- get_adjacent_links(road_network, target_link) adjacent_links #>      [,1]        #> [1,] \"lk_000001\" #> [2,] \"lk_000005\" #> [3,] \"lk_000006\" #> [4,] \"lk_000008\" #> [5,] \"lk_00000a\"  # Plot the target link and the adjacent links is_adjacent <- road_network$links$id %in% adjacent_links adjacent_links_geom <- road_network$links$geometry[is_adjacent] plot(road_network, col = \"gray\") plot(road_network$links$geometry[7], add = TRUE, pch = 19) plot(adjacent_links_geom, add = TRUE, col = \"#E69F00\", lwd = 2)"},{"path":"https://nononoexe.github.io/pavement/reference/get_connected_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Get connected links from a specified node — get_connected_links","title":"Get connected links from a specified node — get_connected_links","text":"function retrieves links connected specified node road network.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/get_connected_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get connected links from a specified node — get_connected_links","text":"","code":"get_connected_links(network, node_ids)"},{"path":"https://nononoexe.github.io/pavement/reference/get_connected_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get connected links from a specified node — get_connected_links","text":"network road_network segmented_network object. node_ids vector node IDs find connected links .","code":""},{"path":"https://nononoexe.github.io/pavement/reference/get_connected_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get connected links from a specified node — get_connected_links","text":"vector link IDs connected specified node.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/get_connected_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get connected links from a specified node — get_connected_links","text":"","code":"# Create a road network road_network <- create_road_network(sample_roads) target_node <- road_network$nodes[3,]$id target_node #> [1] \"jn_000003\"  # Get connected links connected_links <- get_connected_links(road_network, target_node) connected_links #> [1] \"lk_000002\" \"lk_000003\" \"lk_000009\" \"lk_00000a\"  # Plot the target node and the connected links is_connected <- road_network$links$id %in% connected_links connected_links_geom <- road_network$links$geometry[is_connected] plot(road_network, col = \"gray\") plot(connected_links_geom, add = TRUE, col = \"#E69F00\", lwd = 2) plot(road_network$nodes[3,]$geometry, add = TRUE, pch = 19)"},{"path":"https://nononoexe.github.io/pavement/reference/osm_highway_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Values for the 'highway' tag in OpenStreetMap data — osm_highway_values","title":"Values for the 'highway' tag in OpenStreetMap data — osm_highway_values","text":"osm_highway_values contains character vector values 'highway' tag OpenStreetMap data.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/osm_highway_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Values for the 'highway' tag in OpenStreetMap data — osm_highway_values","text":"","code":"osm_highway_values"},{"path":"https://nononoexe.github.io/pavement/reference/osm_highway_values.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Values for the 'highway' tag in OpenStreetMap data — osm_highway_values","text":"character vector length 12.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/osm_highway_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Values for the 'highway' tag in OpenStreetMap data — osm_highway_values","text":"","code":"osm_highway_values #>  [1] \"motorway\"       \"trunk\"          \"primary\"        \"secondary\"      #>  [5] \"tertiary\"       \"unclassified\"   \"residential\"    \"motorway_link\"  #>  [9] \"trunk_link\"     \"primary_link\"   \"secondary_link\" \"tertiary_link\""},{"path":"https://nononoexe.github.io/pavement/reference/pavement-package.html","id":null,"dir":"Reference","previous_headings":"","what":"pavement: Analyzing Spatial Events on Roadways — pavement-package","title":"pavement: Analyzing Spatial Events on Roadways — pavement-package","text":"Pavement package designed analyze spatial events occurring roadways. provides comprehensive toolkit working spatial data, empowering users understand patterns trends road-related phenomena.","code":""},{"path":[]},{"path":"https://nononoexe.github.io/pavement/reference/pavement-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"pavement: Analyzing Spatial Events on Roadways — pavement-package","text":"Maintainer: Keisuke Ando ando@maslab.aitech.ac.jp contributors: Takeshi Uchitane [thesis advisor] Naoto Mukai [thesis advisor] Kazunori Iwata [thesis advisor] Nobuhiro Ito [thesis advisor] Yong Jiang [thesis advisor]","code":""},{"path":"https://nononoexe.github.io/pavement/reference/remove_points_near_endpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove points near endpoints of a linestring — remove_points_near_endpoints","title":"Remove points near endpoints of a linestring — remove_points_near_endpoints","text":"function removes points set points within specified tolerance distance start end point linestring.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/remove_points_near_endpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove points near endpoints of a linestring — remove_points_near_endpoints","text":"","code":"remove_points_near_endpoints(points, linestring, tolerance = 0.01)"},{"path":"https://nononoexe.github.io/pavement/reference/remove_points_near_endpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove points near endpoints of a linestring — remove_points_near_endpoints","text":"points sfc object containing points filter. linestring linestring object. tolerance numeric value representing maximum distance line's ends consider points filtering. Points within distance excluded.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/remove_points_near_endpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove points near endpoints of a linestring — remove_points_near_endpoints","text":"sfc object containing filtered points.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/remove_points_near_endpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove points near endpoints of a linestring — remove_points_near_endpoints","text":"","code":"# Create a points points <- create_points(   0.000, 1.000, 0.500, 0.600, 1.000, 0.010, 1.500, 0.501, 2.000, 0.990 )  # Create a linestring linestring <- create_linestring(0, 1, 1, 0, 2, 1)  # Plot the points plot(linestring, col = \"gray\") plot(points, add = TRUE)   # Filter points within a tolerance distance (default: 0.01) filtered_points <- remove_points_near_endpoints(points, linestring)  # Plot the filtered points plot(linestring, col = \"gray\") plot(filtered_points, add = TRUE)"},{"path":"https://nononoexe.github.io/pavement/reference/sample_accidents.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample accidents data — sample_accidents","title":"Sample accidents data — sample_accidents","text":"sample dataset containing information 10 accidents. dataset demonstration testing represent real-world events.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/sample_accidents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample accidents data — sample_accidents","text":"","code":"sample_accidents"},{"path":"https://nononoexe.github.io/pavement/reference/sample_accidents.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample accidents data — sample_accidents","text":"sf object 10 rows 4 columns: id Accident ID time Time accident (hours) weather Weather condition time accident severity Severity accident geometry Point geometry accident location","code":""},{"path":"https://nononoexe.github.io/pavement/reference/sample_accidents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample accidents data — sample_accidents","text":"","code":"# Show information about the accidents sample_accidents #> Simple feature collection with 10 features and 4 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 1 ymin: 0.4 xmax: 6.5 ymax: 3.1 #> CRS:           NA #>         id time weather severity        geometry #> 1  ac_0001   18   Sunny    Minor     POINT (1 1) #> 2  ac_0002    4   Foggy    Fatal POINT (3.2 0.4) #> 3  ac_0003   13   Snowy    Minor POINT (4.1 3.1) #> 4  ac_0004   23   Sunny    Minor POINT (5.7 3.1) #> 5  ac_0005    7   Rainy    Minor POINT (5.9 1.1) #> 6  ac_0006    7   Sunny    Minor     POINT (6 3) #> 7  ac_0007   19  Cloudy    Minor POINT (6.1 0.9) #> 8  ac_0008    8   Sunny    Minor POINT (6.1 1.2) #> 9  ac_0009   19   Rainy  Serious POINT (6.2 2.9) #> 10 ac_000a   20   Sunny    Minor   POINT (6.5 3)  # Plot the locations of the accidents plot(sample_roads$geometry) plot(sample_accidents$geometry, pch = 4, col = \"red\", add = TRUE)"},{"path":"https://nononoexe.github.io/pavement/reference/sample_points_along_linestring.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample points along a linestring — sample_points_along_linestring","title":"Sample points along a linestring — sample_points_along_linestring","text":"function samples points regular intervals along linestring object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/sample_points_along_linestring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample points along a linestring — sample_points_along_linestring","text":"","code":"sample_points_along_linestring(linestrings, segment_length)"},{"path":"https://nononoexe.github.io/pavement/reference/sample_points_along_linestring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample points along a linestring — sample_points_along_linestring","text":"linestrings sfc object containing linestrings. segment_length desired length segment sampled points.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/sample_points_along_linestring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample points along a linestring — sample_points_along_linestring","text":"sfc object containing sampled points.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/sample_points_along_linestring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample points along a linestring — sample_points_along_linestring","text":"","code":"library(sf)  # Create a linestrings linestrings <- c(   create_linestring(0, 1, 2, 1),   create_linestring(1, 1.3, 1, 0, 2, 0.5) )  # Sample points along the linestrings sampled_points <- sample_points_along_linestring(linestrings, 0.5)  # Plot the sampled points plot(linestrings) plot(sampled_points, add = TRUE, pch = 16, col = c(\"#E69F00\", \"#56B4E9\"))"},{"path":"https://nononoexe.github.io/pavement/reference/sample_roads.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample roads data — sample_roads","title":"Sample roads data — sample_roads","text":"sample dataset representing simple roads. intended demonstration testing represent real-world roads.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/sample_roads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample roads data — sample_roads","text":"","code":"sample_roads"},{"path":"https://nononoexe.github.io/pavement/reference/sample_roads.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample roads data — sample_roads","text":"sf linestring object 6 rows 2 columns: id Road ID layer Layer road (indicates road elevated structure bridge, tunnel, highway) geometry Linestring geometry road","code":""},{"path":"https://nononoexe.github.io/pavement/reference/sample_roads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample roads data — sample_roads","text":"","code":"# Show information about the roads sample_roads #> Simple feature collection with 6 features and 2 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 0 ymin: 0 xmax: 7 ymax: 5 #> CRS:           NA #>        id layer                       geometry #> 1 rd_0001     1     LINESTRING (0 0, 3 0, 4 3) #> 2 rd_0002    NA          LINESTRING (0 1, 7 1) #> 3 rd_0003    NA LINESTRING (2 3, 1 4, 0 3, ... #> 4 rd_0004    NA          LINESTRING (2 3, 4 3) #> 5 rd_0005    NA          LINESTRING (4 3, 7 3) #> 6 rd_0006    NA          LINESTRING (6 0, 6 5)  # Shape of the roads plot(sample_roads$geometry)"},{"path":"https://nononoexe.github.io/pavement/reference/split_linestring.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a linestring into multiple segments — split_linestring","title":"Split a linestring into multiple segments — split_linestring","text":"Split linestring multiple segments","code":""},{"path":"https://nononoexe.github.io/pavement/reference/split_linestring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a linestring into multiple segments — split_linestring","text":"","code":"split_linestring(linestring, split_points, tolerance = 0.01)"},{"path":"https://nononoexe.github.io/pavement/reference/split_linestring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a linestring into multiple segments — split_linestring","text":"linestring linestring object. split_points sfc object containing points split linestring. tolerance numeric value representing maximum distance allowed linestring split points. distance split point linestring exceeds value, point used split linestring.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/split_linestring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a linestring into multiple segments — split_linestring","text":"sfc object containing split linestrings.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/split_linestring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a linestring into multiple segments — split_linestring","text":"","code":"# Create a linestring linestring <- create_linestring(0, -1, 0, 1, 2, 1, 2, 0, 0, 0)  # Create a set of split points split_points <- create_points(0, 0, 1, 1, 2, 0)  # Plot the linestring and split points plot(linestring) plot(split_points, add = TRUE)   # Split the linestring segments <- split_linestring(linestring, split_points)  # Plot the split linestrings plot(segments, col = c(\"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\"), lwd = 2)"},{"path":"https://nononoexe.github.io/pavement/reference/transform_to_cartesian.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform to Cartesian coordinates — transform_to_cartesian","title":"Transform to Cartesian coordinates — transform_to_cartesian","text":"function transforms spatial object Cartesian coordinates (plane rectangular coordinate system). Currently, supports coordinate system used Aichi Prefecture (JDG2011, EPSG:6675).","code":""},{"path":"https://nononoexe.github.io/pavement/reference/transform_to_cartesian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform to Cartesian coordinates — transform_to_cartesian","text":"","code":"transform_to_cartesian(x)"},{"path":"https://nononoexe.github.io/pavement/reference/transform_to_cartesian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform to Cartesian coordinates — transform_to_cartesian","text":"x spatial object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/transform_to_cartesian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform to Cartesian coordinates — transform_to_cartesian","text":"spatial object transformed Cartesian coordinates.","code":""},{"path":[]},{"path":"https://nononoexe.github.io/pavement/reference/transform_to_cartesian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform to Cartesian coordinates — transform_to_cartesian","text":"","code":"# Create points points <- create_points(136.9024, 35.1649, crs = 4326) points #> Geometry set for 1 feature  #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 136.9024 ymin: 35.1649 xmax: 136.9024 ymax: 35.1649 #> Geodetic CRS:  WGS 84 #> POINT (136.9024 35.1649)  # Transform to Cartesian coordinates transformed <- transform_to_cartesian(points) transformed #> Geometry set for 1 feature  #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -24073.54 ymin: -92614.18 xmax: -24073.54 ymax: -92614.18 #> Projected CRS: JGD2011 / Japan Plane Rectangular CS VII #> POINT (-24073.54 -92614.18)"},{"path":"https://nononoexe.github.io/pavement/reference/transform_to_geographic.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform to geographic coordinates — transform_to_geographic","title":"Transform to geographic coordinates — transform_to_geographic","text":"function transforms spatial object geographic coordinates (WGS84, EPSG:4326).","code":""},{"path":"https://nononoexe.github.io/pavement/reference/transform_to_geographic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform to geographic coordinates — transform_to_geographic","text":"","code":"transform_to_geographic(x)"},{"path":"https://nononoexe.github.io/pavement/reference/transform_to_geographic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform to geographic coordinates — transform_to_geographic","text":"x spatial object.","code":""},{"path":"https://nononoexe.github.io/pavement/reference/transform_to_geographic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform to geographic coordinates — transform_to_geographic","text":"spatial object transformed geographic coordinates.","code":""},{"path":[]},{"path":"https://nononoexe.github.io/pavement/reference/transform_to_geographic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform to geographic coordinates — transform_to_geographic","text":"","code":"# Create points points <- create_points(-24073.54, -92614.18, crs = 6675) points #> Geometry set for 1 feature  #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -24073.54 ymin: -92614.18 xmax: -24073.54 ymax: -92614.18 #> Projected CRS: JGD2011 / Japan Plane Rectangular CS VII #> POINT (-24073.54 -92614.18)  # Transform to geographic coordinates transformed <- transform_to_geographic(points) transformed #> Geometry set for 1 feature  #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 136.9024 ymin: 35.1649 xmax: 136.9024 ymax: 35.1649 #> Geodetic CRS:  WGS 84 #> POINT (136.9024 35.1649)"}]
