# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  release:
    types: [published]
  workflow_dispatch:

name: pkgdown.yaml

permissions: read-all

jobs:
  pkgdown:
    runs-on: ubuntu-latest
    # Only restrict concurrency for non-PR jobs
    concurrency:
      group: pkgdown-${{ github.event_name != 'pull_request' || github.run_id }}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      # DEBUG START

      - name: 1. Verify Git checkout state
        run: |
          echo "--- Verifying the commit being tested ---"
          git log -1
          echo "--- Verifying the state of 'configure' in the commit ---"
          # 'git show' will display mode changes if they are in the commit
          git show --summary HEAD

          echo "--- Checking file permissions immediately after checkout ---"
          ls -la configure
          if [ ! -x configure ]; then
            echo "ERROR: 'configure' is NOT executable right after checkout!"
            exit 1
          else
            echo "SUCCESS: 'configure' is executable right after checkout."
          fi

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: 2. Manually run R CMD build and inspect the tarball
        run: |
          echo "--- Running 'R CMD build' to create the source tarball ---"
          R CMD build .

          echo "--- Listing files in the generated tarball to check permissions ---"
          # tar -tvf will show permissions as they are stored in the archive
          tar -tvf pavement_*.tar.gz | grep configure

      - name: 3. Unpack the tarball and check permissions again
        run: |
          echo "--- Unpacking the tarball into a temporary directory ---"
          mkdir temp_build_dir
          tar -xzvf pavement_*.tar.gz -C temp_build_dir

          echo "--- Checking permissions of the extracted 'configure' file ---"
          ls -la temp_build_dir/pavement/configure
          if [ ! -x temp_build_dir/pavement/configure ]; then
            echo "CRITICAL ERROR: Execute permission was LOST during build/unpack process!"
            exit 1
          else
            echo "SUCCESS: Execute permission survived the build/unpack process."
          fi

      # DEBUG END

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Install system dependencies (GEOS & GDAL)
        if: runner.os == 'Linux'
        run: |
          sudo add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable
          sudo apt-get update
          sudo apt-get install -y libgeos-dev libgdal-dev libproj-dev
          sudo ldconfig

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::pkgdown, local::.
          needs: website

      - name: Reinstall sf from source
        if: runner.os == 'Linux'
        run: install.packages("sf", type = "source", repos = "https://cloud.r-project.org")
        shell: Rscript {0}

      - name: Build site
        run: pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE)
        shell: Rscript {0}

      - name: Deploy to GitHub pages ðŸš€
        if: github.event_name != 'pull_request'
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          clean: false
          branch: gh-pages
          folder: docs
