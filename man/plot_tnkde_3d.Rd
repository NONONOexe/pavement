% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot-3d.R
\name{plot_tnkde_3d}
\alias{plot_tnkde_3d}
\title{Plot TNKDE results in a 3D space-time cube}
\usage{
plot_tnkde_3d(
  tnkde_result,
  mode = c("event", "count", "density"),
  time_range = 0:23,
  ...
)
}
\arguments{
\item{tnkde_result}{A \code{segmented_network} object containing the TNKDE results.}

\item{mode}{Character string, one of \code{"event"}, \code{"count"}, or \code{"density"}.}

\item{time_range}{Numeric vector specifying which time points to plot (default: \code{0:23}).}

\item{...}{Additional arguments passed to \code{\link[plotly:plot_ly]{plotly::plot_ly()}} (only used for \code{"event"} and \code{"count"} modes).}
}
\value{
\itemize{
\item For \code{"event"} and \code{"count"}: a \link[plotly:plotly]{plotly::plotly} object.
\item For \code{"density"}: \code{NULL} (a 3D rgl window is opened instead).
}
}
\description{
A unified plotting function for visualizing spatio-temporal kernel density
estimation (TNKDE) results in different modes:
\itemize{
\item \code{"event"}: plots event points in 3D (X, Y, time) with the road network as background.
\item \code{"count"}: plots segment-level event counts with a color scale over time.
\item \code{"density"}: plots density values along segments using rgl (opens a separate 3D window).
}
}
\details{
\itemize{
\item \code{"event"} and \code{"count"} modes use \strong{plotly} and return an interactive plot
in the RStudio Viewer or browser.
\item \code{"density"} mode uses \strong{rgl} and opens a separate OpenGL window for interactive 3D visualization.
In this mode, nothing is returned (invisible \code{NULL}).
}
}
\examples{
\dontrun{
tnkde_network <- sample_roads |>
  create_road_network() |>
  create_segmented_network(segment_length = 0.5) |>
  prepare_tnkde_data(sample_accidents) |>
  convolute_spatiotemporal_network(
    bandwidth_space = 3,
    bandwidth_time = 2,
    time_points = 0:23
  )

# Plot event mode
plot_tnkde_3d(tnkde_network, mode = "event")

# Plot count mode
plot_tnkde_3d(tnkde_network, mode = "count")

# Plot density mode (rgl window)
plot_tnkde_3d(tnkde_network, mode = "density")
}

}
